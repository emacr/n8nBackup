{"createdAt":"2025-09-08T14:13:37.537Z","updatedAt":"2025-09-08T14:13:56.000Z","id":"4TUVkGsXLrwzUxGk","name":"PedidosRestaurante","active":false,"isArchived":false,"nodes":[{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"1c2421a2-e131-49e7-8a76-5133f7415f43","leftValue":"={{ $json.body.message_type }}","rightValue":"incoming","operator":{"type":"string","operation":"equals"}}],"combinator":"or"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[-2656,1168],"id":"b6e0a585-bf1b-47a0-a0e0-d38a7d030ec7","name":"If4"},{"parameters":{"httpMethod":"POST","path":"6e213f36-0119-4dc5-8a83-97e2f9675c22","options":{}},"type":"n8n-nodes-base.webhook","typeVersion":2.1,"position":[-2896,1168],"id":"86c949d3-b031-425f-975c-1035a14234cd","name":"Webhook","webhookId":"6e213f36-0119-4dc5-8a83-97e2f9675c22"},{"parameters":{},"type":"n8n-nodes-base.noOp","typeVersion":1,"position":[-2656,1456],"id":"e02762f3-9b8d-43a0-b758-2202f231eeb4","name":"No Operation, do nothing1"},{"parameters":{"jsCode":"// Function node - comprobaci√≥n robusta de pendiente / entregado\n// 'items' aqu√≠ proviene del nodo \"Pedido pendiente_cliente\"\nconst pendientesFound = Array.isArray(items) && items.length > 0 && Object.keys(items[0].json || {}).length > 0;\n\n// intentar leer el nodo \"Pedido Anterior\" con seguridad\nconst anteriorItem = $('Pedido Anterior')?.first()?.json;\nconst anteriorFound = anteriorItem && Object.keys(anteriorItem).length > 0;\n\nlet pedidoExistente = false;\nlet entregado = false;\nlet pedido = null;\n\nfunction normalizeEstado(e) {\n  if (!e && e !== 0) return '';\n  if (typeof e === 'object') return (e.name ?? e.value ?? String(e)).toString().trim().toLowerCase();\n  return String(e).trim().toLowerCase();\n}\n\nif (pendientesFound) {\n  // Si hay un pedido pendiente lo usamos como fuente principal\n  pedidoExistente = true;\n  pedido = items[0].json;\n  const estado = normalizeEstado(pedido.estadoPedido);\n  entregado = (estado === 'entregado');\n} else if (anteriorFound) {\n  // Si no hay pendientes pero la b√∫squeda \"Pedido Anterior\" encontr√≥ algo,\n  // entonces podemos marcar 'entregado' dependiendo de ese registro\n  pedidoExistente = false; // no hay pendiente activo\n  pedido = anteriorItem;\n  const estado = normalizeEstado(pedido.estadoPedido);\n  entregado = (estado === 'entregado');\n} else {\n  // no hay nada\n  pedidoExistente = false;\n  entregado = false;\n}\n\nreturn [{ json: { pedidoExistente, entregado, pedido } }];\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-1024,1152],"id":"c8699d1f-125d-467b-92c3-d8ed19a04be7","name":"pedido existente y pedido entregado"},{"parameters":{"authentication":"nocoDbApiToken","operation":"getAll","projectId":"p4ux4pbadqc3jkp","table":"m6fpdkibwdxg9cc","options":{"where":"={{ $json.formula }}"}},"type":"n8n-nodes-base.nocoDb","typeVersion":3,"position":[-1920,1152],"id":"58e4ba38-14f3-4892-9456-83318fd7b363","name":"Pedido Anterior","alwaysOutputData":true,"retryOnFail":true,"maxTries":2,"waitBetweenTries":2000},{"parameters":{"jsCode":"const telefono = $input.first().json.numero;\nconst mensaje = $input.first().json.message;\n\n// üëá Construir la f√≥rmula con la sintaxis correcta para NocoDB\nconst formula = `(telefono,eq,${telefono})~and((estadoPedido,eq,entregado)~or(estadoPedido,eq,confirmado_sucursal))`;\nreturn [\n  {\n    json: {\n      formula,\n      mensaje\n    }\n  }\n];"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-2144,1152],"id":"58b3bc35-9580-4725-ba03-5d2e5b51c530","name":"Formula Filtro - Pedido Anterior"},{"parameters":{"jsCode":"// Function node \"Cliente o Nuevo\" mejorado\n// Primero, intenta con el item recibido (Pedido Anterior)\nconst recFromThisNode = items[0]?.json;\n\n// Luego intenta leer la salida del otro nodo que tambi√©n busca por tel√©fono,\n\n// por si la conexi√≥n o timing cambi√≥ (opcional)\n//const recFromPedidoAnterior =$('Pedido Anterior')?.first()?.json;\n\n\n//const recFromPendiente = $('Pedido pendiente_cliente2')?.first()?.json;\n\n// decide si hay registro - buscamos nombre o telefono en cualquiera de las fuentes\nconst candidate = recFromThisNode ||  recFromPedidoAnterior;\n\nif (candidate && (candidate.nombre || candidate.telefono)) {\n  return [{ json: { clienteExistente: true, nombreCliente: candidate.nombre ?? null, telefonoCliente: candidate.telefono ?? null } }];\n} else {\n  return [{ json: { clienteExistente: false } }];\n}\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-1712,1152],"id":"da754b37-5926-4a44-9955-58062fac4fdb","name":"Cliente o Nuevo"},{"parameters":{"jsCode":"const telefono = $('datosImportantes').first().json.numero\nconst formula = `(telefono,eq,${telefono})~and(estadoPedido,eq,pendiente_cliente)`;\n\n\nreturn [{ json: { formula } }];\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-1488,1152],"id":"ecf73c88-a951-43a1-ae0b-377cdbeafc02","name":"Verificar si ya existe un pedido \"activo\" (pendiente_cliente"},{"parameters":{"authentication":"nocoDbApiToken","operation":"getAll","projectId":"p4ux4pbadqc3jkp","table":"m6fpdkibwdxg9cc","options":{"where":"={{ $json.formula }}"}},"type":"n8n-nodes-base.nocoDb","typeVersion":3,"position":[-1280,1152],"id":"2b123133-3e49-4f0a-be3e-a57f3bd27c6e","name":"Pedido pendiente_cliente","alwaysOutputData":true},{"parameters":{"rules":{"values":[{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"leftValue":"={{ $('Information Extractor').item.json.output.cancelar }}","rightValue":"cancelar","operator":{"type":"string","operation":"notEmpty","singleValue":true},"id":"8266010d-189d-477f-be6d-e21a88610b0b"}],"combinator":"and"},"renameOutput":true,"outputKey":"cancelar"},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"379645f4-5e78-4044-8acc-4d994464797f","leftValue":"={{ $('Information Extractor').item.json.output.confirmar }}","rightValue":"confirmar","operator":{"type":"string","operation":"notEmpty","singleValue":true}}],"combinator":"and"},"renameOutput":true,"outputKey":"confirmar"},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"0b51ac50-0de0-4bc4-841e-f82bd69cad5b","leftValue":"={{ $('pedido existente y pedido entregado').first().json.entregado }}","rightValue":"","operator":{"type":"boolean","operation":"true","singleValue":true}}],"combinator":"and"},"renameOutput":true,"outputKey":"pedidoCompletado"},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"9254774d-e7c0-4042-ac6b-e6cab8ed096e","leftValue":"={{ $('Information Extractor').item.json.output.combo }}","rightValue":"","operator":{"type":"string","operation":"notEmpty","singleValue":true}}],"combinator":"and"},"renameOutput":true,"outputKey":"comboInfantil"}]},"options":{"fallbackOutput":"extra"}},"type":"n8n-nodes-base.switch","typeVersion":3.2,"position":[-128,768],"id":"88de454d-3a49-4dbf-a3ff-f91b00d22539","name":"Switch","alwaysOutputData":false},{"parameters":{"authentication":"nocoDbApiToken","operation":"update","projectId":"p4ux4pbadqc3jkp","table":"m6fpdkibwdxg9cc","fieldsUi":{"fieldValues":[{"fieldName":"estadoPedido","fieldValue":"cancelado"},{"fieldName":"Id","fieldValue":"={{ $json.idPedido }}"}]}},"type":"n8n-nodes-base.nocoDb","typeVersion":3,"position":[480,208],"id":"15990af9-e20a-4f95-907e-8004531f7216","name":"Update a row"},{"parameters":{},"type":"n8n-nodes-base.merge","typeVersion":3.2,"position":[96,1152],"id":"0dbc2aaa-4ce9-436d-9298-11740cfcadd9","name":"Merge1","alwaysOutputData":true},{"parameters":{"authentication":"nocoDbApiToken","operation":"create","projectId":"p4ux4pbadqc3jkp","table":"m6fpdkibwdxg9cc","fieldsUi":{"fieldValues":[{"fieldName":"telefono","fieldValue":"={{ $('Webhook').first().json.body.conversation.messages[0].sender.phone_number }}"},{"fieldName":"fechaHoraPedido","fieldValue":"={{ $now }}"},{"fieldName":"estadoPedido","fieldValue":"pendiente_cliente"}]}},"type":"n8n-nodes-base.nocoDb","typeVersion":3,"position":[1024,1248],"id":"d95caed7-dea9-4a61-ad87-bbbbff9e1e53","name":"insertarNumero"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"586efc2b-0452-47f8-8d4f-ae71368c3aa0","leftValue":"={{ $('coordinador').item.json.output }}","rightValue":"Generar_Resumen_y_Total","operator":{"type":"string","operation":"contains"}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[5024,912],"id":"5a014b65-8fe2-4aa1-957f-2cf20e55141c","name":"If8"},{"parameters":{"promptType":"define","text":"= {{ $json.tool }}","options":{"systemMessage":"=ROL: ROUTER L√ìGICO - SALIDA ESTRICTA\n\nTU √öNICA FUNCI√ìN: recibir el objeto JSON que viene del paso anterior. Ese objeto estar√° en la ruta items[0].json.tool (y puede contener campos adicionales como field y reason).\n\nSALIDA OBLIGATORIA:\n- Si items[0].json.tool es un string y uno de los siguientes valores:\n  [\"tomaFinalizar\",\"actualizaciones\",\"notificarUbicacionRecibida\",\"tomaCombos\",\"tomaAlas\",\"tomaSalsas\",\"tomaBanadas\",\"tomaExtras\",\"tomaBebidas\",\"tomaEntrega\",\"pideUbicacion\",\"tomaSucursales\",\"tomaNombre\",\"tomaPago\",\"tomaComentarios\"]\n  -> Devuelve EXACTAMENTE (una sola l√≠nea, sin texto adicional, sin explicaci√≥n):\n     {\"tool\":\"<EL_MISMO_VALOR_QUE_LLEG√ì>\"}\n\n- Si items[0].json.tool no existe o no est√° en la lista -> devuelve EXACTAMENTE:\n     {\"tool\":\"actualizaciones\"}\n\nREGLAS:\n- No generes texto libre, no a√±adas par√©ntesis, l√≠neas en blanco, ni mensajes humanos.\n- La respuesta debe ser una √∫nica l√≠nea JSON. Cualquier otra cosa se considerar√° inv√°lida.\nF"}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":2.2,"position":[4288,1168],"id":"1172bd5c-b86e-4089-ac29-b8ce71384f23","name":"coordinador","retryOnFail":true},{"parameters":{"toolDescription":"=DEBES USAR ESTA HERRAMIENTA INMEDIATAMENTE cuando el mensaje del cliente contenga informaci√≥n nueva para el pedido, como un combo, tipo de alitas, salsas, nombre, pago etc. Es tu prioridad n√∫mero uno para GUARDAR datos.","text":"={{ $('datosImportantes').first().json.message }}","options":{"systemMessage":"==# MISI√ìN\nRecibe informaci√≥n espec√≠fica del pedido y usa OBLIGATORIAMENTE la herramienta 'actualizar' para registrarla en NocoDB.\n\n=# PROCESO OBLIGATORIO\n1. Recibo mensaje con informaci√≥n del pedido\n2. INMEDIATAMENTE ejecuto herramienta 'actualizar' con esa informaci√≥n\n3. Fin (no converso, no pregunto m√°s)\n\n=# REGLAS INQUEBRANTABLES\n- NO conversar con el usuario\n- NO pedir m√°s informaci√≥n  \n- NO responder nada extra\n- SOLO ejecutar 'actualizar' y terminar\n\n=# EJEMPLOS\nInput: \"El cliente quiere combo 12\"\nAcci√≥n: ejecutar actualizar(\"El cliente quiere combo 12\")\n\nInput: \"Quiere sus alitas empanizadas\"  \nAcci√≥n: ejecutar actualizar(\"Quiere sus alitas empanizadas\")\n\nInput: \"El cliente pagara en efectivo\"  \nAcci√≥n: ejecutar actualizar(\"Quiere pagar en efectivo\")","maxIterations":2}},"type":"@n8n/n8n-nodes-langchain.agentTool","typeVersion":2.2,"position":[6320,2000],"id":"404c52c7-20e6-48d9-89c5-be06eeadbf1a","name":"actualizaciones"},{"parameters":{"descriptionType":"manual","toolDescription":"Usa esta herramienta para extraer informaci√≥n de las salsas","authentication":"nocoDbApiToken","operation":"getAll","projectId":"p4ux4pbadqc3jkp","table":"miawc7h4yh19p49","returnAll":true,"options":{"fields":["Nombre","Picante","Descripci√≥n"]}},"type":"n8n-nodes-base.nocoDbTool","typeVersion":3,"position":[2992,2416],"id":"3f875f7e-f5d7-4091-9d72-36d7d233e7bb","name":"salsas"},{"parameters":{"descriptionType":"manual","toolDescription":"Usa esta herramienta para obtener informaci√≥n de los combos disponibles","authentication":"nocoDbApiToken","operation":"getAll","projectId":"p4ux4pbadqc3jkp","table":"m1rcl018pi9goj3","returnAll":true,"options":{"fields":["Nombre","Piezas","Salsas Permitidas","Incluye Bebida","Comentarios","Precio"]}},"type":"n8n-nodes-base.nocoDbTool","typeVersion":3,"position":[2560,2512],"id":"f695639f-7eed-45d0-99a7-568a36ff1478","name":"combos"},{"parameters":{"descriptionType":"manual","toolDescription":"Usa esta herramienta √öNICAMENTE para consultar las bebidas disponibles y el precio c√≥rdobas C$ de cada una en . La herramienta te devolver√° el nombre y el precio correcto de cada bebida.","authentication":"nocoDbApiToken","operation":"getAll","projectId":"p4ux4pbadqc3jkp","table":"m2mz9uck1ctm5vd","returnAll":true,"options":{"fields":["Nombre","Precio"]}},"type":"n8n-nodes-base.nocoDbTool","typeVersion":3,"position":[4064,2080],"id":"9237f4ca-1808-446b-b23c-089de0bfe716","name":"bebidas"},{"parameters":{"descriptionType":"manual","toolDescription":"Usa esta herramienta √öNICAMENTE para consultar las extras disponibles y el precio c√≥rdobas C$ de cada una en . La herramienta te devolver√° el nombre y el precio correcto de cada extra.","authentication":"nocoDbApiToken","operation":"getAll","projectId":"p4ux4pbadqc3jkp","table":"mzggc18rppgfrap","returnAll":true,"options":{"fields":["Nombre","Precio"]}},"type":"n8n-nodes-base.nocoDbTool","typeVersion":3,"position":[3760,2272],"id":"b2558e0d-c74c-4871-80bf-1dc096ff3bf6","name":"extras"},{"parameters":{"authentication":"nocoDbApiToken","operation":"update","projectId":"p4ux4pbadqc3jkp","table":"m6fpdkibwdxg9cc","fieldsUi":{"fieldValues":[{"fieldName":"nombre","fieldValue":"={{\n  (() => {\n    // 1. Le pedimos a la IA que extraiga el nombre, sin m√°s instrucciones.\n    const nombreDetectado = $fromAI('nombre', 'Extrae el nombre propio de la persona que se menciona en el texto.', 'string');\n\n    // 2. Verificamos que el resultado no sea nulo, ni la palabra \"cliente\", y que tenga una longitud razonable.\n    if (nombreDetectado && nombreDetectado.toLowerCase() !== 'cliente' && nombreDetectado.length > 2) {\n      // Si pasa los filtros, es un nombre v√°lido y lo devolvemos.\n      return nombreDetectado;\n    }\n\n    // 3. Si no es un nombre v√°lido, omitimos el campo para que siga vac√≠o.\n    return undefined;\n  })()\n}}"},{"fieldName":"combo","fieldValue":"={{\n  (() => {\n    // 1. Intentamos extraer el combo del mensaje actual.\n    const comboDetectado = $fromAI('combo', 'Extrae el combo que el cliente seleccion√≥ (puede ser solo un n√∫mero o la palabra completa).', 'string');\n\n    // --- BLINDAJE MEJORADO ---\n    // Si el valor es nulo, o si despu√©s de limpiarlo est√° completamente vac√≠o,\n    // retornamos undefined para NO actualizar el campo en la base de datos.\n    if (!comboDetectado || comboDetectado.trim().length === 0) {\n      return undefined;\n    }\n\n    // 2. Convertimos a min√∫sculas para uniformidad.\n    const texto = comboDetectado.toLowerCase().trim();\n\n    // 3. Lista de combos v√°lidos.\n    const combosDisponibles = [\n      \"combo 24\",\n      \"combo 12\",\n      \"combo 6\",\n      \"combo 100\",\n      \"combo 50\",\n      \"combo 18\",\n      \"combo infantil\"\n    ];\n\n    // 4. Si el texto ya contiene la palabra \"combo\", verificamos si coincide.\n    if (texto.includes(\"combo\")) {\n      const comboValido = combosDisponibles.find(c => texto.includes(c.replace(\"combo \", \"\")));\n      return comboValido ? comboValido : undefined;\n    }\n\n    // 5. Si el texto es solo un n√∫mero, buscamos el combo correspondiente.\n    const numeroDetectado = texto.match(/\\d+/);\n    if (numeroDetectado) {\n      const comboValido = combosDisponibles.find(c => c.includes(numeroDetectado[0]));\n      return comboValido ? comboValido : undefined;\n    }\n\n    // 6. Si el texto es \"infantil\".\n    if (texto.includes(\"infantil\")) {\n      return \"Combo infantil\";\n    }\n\n    return undefined;\n  })()\n}}\n"},{"fieldName":"tipo","fieldValue":"={{\n  (() => {\n    // 1. Llama a la IA sin el valor por defecto 'fritas'.\n    const tipoDetectado = $fromAI('tipo', `tipo de salsa que el cliente eligio`, 'string');\n\n    // 2. Si la IA no devuelve nada, se ignora el campo por completo.\n    if (!tipoDetectado || tipoDetectado.trim().length < 3) {\n      return undefined;\n    }\n\n    // 3. Convierte la respuesta a min√∫sculas para una comparaci√≥n segura.\n    const textoEnMinusculas = tipoDetectado.toLowerCase();\n\n    // 4. Busca las palabras clave y devuelve el valor normalizado.\n    // Usamos 'frita' para que funcione con \"frita\" y \"fritas\".\n    if (textoEnMinusculas.includes('fritas')) {\n      return 'fritas';\n    }\n    \n    // Usamos 'empanizada' para que funcione con \"empanizada\" y \"empanizadas\".\n    if (textoEnMinusculas.includes('empanizadas')) {\n      return 'empanizadas';\n    }\n\n    // 5. Si la respuesta no contiene ninguna de las palabras clave,\n    // se ignora el campo para no guardar datos incorrectos.\n    return undefined;\n  })()\n}}"},{"fieldName":"salsas","fieldValue":"={{\n  (() => {\n    // 1. Llama a la IA para una extracci√≥n inicial.\n    const salsasDetectadas = $fromAI('salsas', 'Extrae una lista SEPARADA POR COMAS de todas las salsas que el cliente seleccion√≥. Devuelve solo los nombres.', 'string');\n\n    if (!salsasDetectadas || salsasDetectadas.trim().length < 3) {\n      return undefined;\n    }\n\n    // 2. Define tus salsas oficiales y sus palabras clave (en min√∫sculas).\n    const salsasValidas = {\n      'Mango Habanero': ['mango', 'habanero'],\n      'Chipotle': ['chipotle'],\n      'Ajo Parmesano': ['ajo', 'parmesano'],\n      'Lim√≥n y Pimienta': ['limon', 'pimienta'],\n      'BBQ': ['bbq', 'barbacoa'],\n      'Buffalo': ['buffalo'],\n      'Teriyaki': ['teriyaki']\n    };\n\n    // 3. Normaliza la respuesta de la IA a min√∫sculas.\n    const textoEnMinusculas = salsasDetectadas.toLowerCase();\n    const salsasEncontradas = [];\n\n    // 4. Compara la respuesta de la IA con las palabras clave.\n    for (const [salsaOficial, keywords] of Object.entries(salsasValidas)) {\n      if (keywords.some(keyword => textoEnMinusculas.includes(keyword))) {\n        salsasEncontradas.push(salsaOficial);\n      }\n    }\n\n    // 5. Devolvemos una LISTA con los nombres oficiales y √∫nicos.\n    const salsasUnicas = [...new Set(salsasEncontradas)];\n    return salsasUnicas.length > 0 ? salsasUnicas : undefined;\n  })()\n}}"},{"fieldName":"extras","fieldValue":"={{\n  (() => {\n    // 1. La IA extrae el texto sobre los extras.\n    const extraDetectado = $fromAI('extras', 'Extrae los extras que el usuario quiere a√±adir a su orden, o si expl√≠citamente dice que no quiere ninguno.', 'string');\n\n    if (!extraDetectado || extraDetectado.trim().length < 3) {\n      return undefined;\n    }\n\n    // 2. Convertimos a min√∫sculas para facilitar la comparaci√≥n.\n    const textoEnMinusculas = extraDetectado.toLowerCase();\n    \n    // --- NUEVO BLOQUE: Verificar si el usuario NO quiere extras ---\n    const palabrasClaveNegativas = ['no', 'ninguno', 'sin extra', 'nada mas'];\n    if (palabrasClaveNegativas.some(keyword => textoEnMinusculas.includes(keyword))) {\n      return 'Ninguno'; // Devolvemos un texto para llenar el campo y romper el bucle.\n    }\n    // -----------------------------------------------------------\n    \n    // 3. Creamos una lista para guardar los extras que encontremos.\n    const extrasEncontrados = [];\n\n    // 4. Revisamos cada extra de forma independiente.\n    if (textoEnMinusculas.includes('cheddar') || textoEnMinusculas.includes('jalape√±o')) {\n      extrasEncontrados.push('Papas con Cheddar Jalape√±o');\n    }\n    \n    if (textoEnMinusculas.includes('salsa')) {\n      extrasEncontrados.push('Salsa extra 2 onzas');\n    }\n    \n    if (textoEnMinusculas.includes('vegetales')) {\n      extrasEncontrados.push('Extra de vegetales');\n    }\n    \n    if (textoEnMinusculas.includes('papas fritas')) {\n      extrasEncontrados.push('Extra de papas fritas');\n    }\n\n    // 5. Si la lista tiene al menos un extra, la unimos en un texto.\n    const extrasUnicos = [...new Set(extrasEncontrados)];\n    return extrasUnicos.length > 0 ? extrasUnicos.join(', ') : undefined;\n  })()\n}}"},{"fieldName":"comentarios","fieldValue":"={{\n  (() => {\n    // 1. Intentamos extraer el comentario del mensaje actual.\n    const comentarioDetectado = $fromAI('comentarios', `algun comentario adicional del cliente`, 'string');\n\n    // 2. Si la IA encuentra un valor, lo devolvemos para actualizar.\n    //    Si no, devolvemos 'undefined' para no borrar datos existentes.\n    return comentarioDetectado ? comentarioDetectado : undefined;\n  })()\n}}"},{"fieldName":"entrega","fieldValue":"={{\n  (() => {\n    // 1. La IA extrae el texto sobre el tipo de entrega.\n    const entregaDetectada = $fromAI('entrega', 'Extrae la frase o palabra que el usuario us√≥ para describir el tipo de entrega.', 'string');\n\n    // Si la IA no devuelve nada, no hacemos nada.\n    if (!entregaDetectada || entregaDetectada.trim().length < 3) {\n      return undefined;\n    }\n\n    // 2. Convertimos la respuesta a min√∫sculas para una comparaci√≥n segura.\n    const textoEnMinusculas = entregaDetectada.toLowerCase();\n\n    // 3. Buscamos PALABRAS CLAVE y devolvemos el valor V√ÅLIDO para Airtable.\n    if (textoEnMinusculas.includes('delivery')) {\n      return 'Delivery';\n    }\n    \n    if (textoEnMinusculas.includes('llevar')) {\n      return 'Para Llevar';\n    }\n    \n    if (textoEnMinusculas.includes('restaurante') || textoEnMinusculas.includes('consumo')) {\n      return 'Consumo en Restaurante';\n    }\n\n    // 4. Si no se encuentra ninguna palabra clave, omitimos el campo para evitar errores.\n    return undefined;\n  })()\n}}"},{"fieldName":"formaPago","fieldValue":"={{\n  (() => {\n    // 1. La IA extrae el texto que el usuario proporcion√≥.\n    const pagoDetectado = $fromAI('formaPago', 'Extrae la frase o palabra que el usuario us√≥ para describir su m√©todo de pago.', 'string');\n\n    // Si la IA no devuelve nada, no hacemos nada.\n    if (!pagoDetectado || pagoDetectado .trim().length < 3) {\n      return undefined;\n    }\n\n    // 2. Convertimos la respuesta a min√∫sculas para una comparaci√≥n segura.\n    const textoEnMinusculas = pagoDetectado.toLowerCase();\n\n    // 3. Buscamos PALABRAS CLAVE y devolvemos el valor V√ÅLIDO para Airtable.\n    if (textoEnMinusculas.includes('efectivo')) {\n      return 'efectivo';\n    }\n    \n    if (textoEnMinusculas.includes('tarjeta')) {\n      return 'tarjeta';\n    }\n    \n    if (textoEnMinusculas.includes('transferencia')) {\n      return 'transferencia';\n    }\n\n    // 4. Si no se encuentra ninguna palabra clave, omitimos el campo para evitar errores.\n    return undefined;\n  })()\n}}"},{"fieldName":"Id","fieldValue":"={{ $('Pedido pendiente1').item.json.Id }}"},{"fieldName":"bebidas","fieldValue":"={{\n  (() => {\n    // 1. La IA extrae el texto sobre las bebidas.\n    const bebidaDetectada = $fromAI('bebidas', 'Extrae las bebidas que el usuario quiere a√±adir a su orden, o si expl√≠citamente dice que no quiere ninguna.', 'string');\n\n    if (!bebidaDetectada || bebidaDetectada.trim().length < 3) {\n      return undefined;\n    }\n\n    // 2. Convertimos a min√∫sculas para facilitar la comparaci√≥n.\n    const textoEnMinusculas = bebidaDetectada.toLowerCase();\n    \n    // --- NUEVO BLOQUE: Verificar si el usuario NO quiere bebidas ---\n    const palabrasClaveNegativas = ['no', 'ninguna', 'sin bebida', 'nada mas'];\n    if (palabrasClaveNegativas.some(keyword => textoEnMinusculas.includes(keyword))) {\n      return 'Ninguna'; // Devolvemos un texto para llenar el campo y romper el bucle.\n    }\n    // -------------------------------------------------------------\n    \n    // 3. Creamos una lista para guardar las bebidas que encontremos.\n    const bebidasEncontradas = [];\n\n    // 4. Revisamos cada bebida disponible (tu l√≥gica existente).\n    if (textoEnMinusculas.includes('pichel') && textoEnMinusculas.includes('t√©')) {\n      bebidasEncontradas.push('Pichel de t√© fr√≠o lim√≥n');\n    }\n    if (textoEnMinusculas.includes('gaseosa 2') || \n        (textoEnMinusculas.includes('gaseosa') && textoEnMinusculas.includes('2'))) {\n      bebidasEncontradas.push('Gaseosa 2 Lts');\n    }\n    if (textoEnMinusculas.includes('pepsi 3') || \n        (textoEnMinusculas.includes('pepsi') && textoEnMinusculas.includes('3'))) {\n      bebidasEncontradas.push('Pepsi 3 Lts');\n    }\n    if (textoEnMinusculas.includes('vaso') && textoEnMinusculas.includes('t√©')) {\n      bebidasEncontradas.push('Vaso t√© fr√≠o lim√≥n');\n    }\n    if (textoEnMinusculas.includes('coca') || textoEnMinusculas.includes('cola lata')) {\n      bebidasEncontradas.push('Coca Cola Lata');\n    }\n    if (textoEnMinusculas.includes('hi-c') || textoEnMinusculas.includes('hic')) {\n      bebidasEncontradas.push('Hi-C');\n    }\n    if (textoEnMinusculas.includes('pepsi 12') || \n        (textoEnMinusculas.includes('pepsi') && textoEnMinusculas.includes('12'))) {\n      bebidasEncontradas.push('Pepsi 12 onz');\n    }\n    if (textoEnMinusculas.includes('agua') || \n        textoEnMinusculas.includes('botella de agua') || \n        textoEnMinusculas.includes('botella con agua')) {\n      bebidasEncontradas.push('Botella con Agua');\n    }\n\n    // 5. Eliminamos duplicados.\n    const bebidasUnicas = [...new Set(bebidasEncontradas)];\n\n    // 6. Si se encontraron bebidas, se devuelve la lista. Si no, se asume que\n    // el mensaje no era sobre bebidas y no se actualiza el campo.\n    return bebidasUnicas.length > 0 ? bebidasUnicas : undefined;\n  })()\n}}"},{"fieldName":"sucursalDespacho","fieldValue":"={{\n  (() => {\n    // 1. La IA extrae el texto que el usuario proporcion√≥ sobre la sucursal.\n    const sucursalDetectada = $fromAI('sucursalDespacho', 'Extrae el nombre de la sucursal que el cliente mencion√≥.', 'string');\n\n    // Si la IA no devuelve nada, no hacemos nada.\n    if (!sucursalDetectada || sucursalDetectada.trim().length < 3) {\n      return undefined;\n    }\n\n    // 2. Convertimos la respuesta a min√∫sculas para una comparaci√≥n segura.\n    const textoEnMinusculas = sucursalDetectada.toLowerCase();\n\n    // 3. Buscamos PALABRAS CLAVE y devolvemos el nombre V√ÅLIDO de la sucursal.\n    if (textoEnMinusculas.includes('sandino')) {\n      return 'Praderas de Sandino';\n    }\n    \n    if (textoEnMinusculas.includes('linda vista')) {\n      return 'Linda Vista';\n    }\n    \n    if (textoEnMinusculas.includes('veracruz')) {\n      return 'Veracruz';\n    }\n    \n    if (textoEnMinusculas.includes('robles')) {\n      return 'Los robles';\n    }\n\n    if (textoEnMinusculas.includes('altagracia')) {\n      return 'Altagracia';\n    }\n\n    if (textoEnMinusculas.includes('santa ana')) {\n      return 'Santa Ana';\n    }\n\n    if (textoEnMinusculas.includes('bello horizonte')) {\n      return 'Bello horizonte';\n    }\n\n    // 4. Si no se encuentra ninguna palabra clave, omitimos el campo para evitar errores.\n    return undefined;\n  })()\n}}"},{"fieldName":"alitasBa√±adas","fieldValue":"={{\n  (() => {\n    // 1. Usamos un prompt simple para clasificar la intenci√≥n del cliente.\n    const respuestaDetectada = $fromAI('alitasBanadas', \"Analiza la respuesta del cliente. Si es afirmativa (s√≠, claro, afirmativo), devuelve la palabra 'si'. Si es negativa (no, sin ba√±ar, secas), devuelve la palabra 'no'.\", 'string');\n\n    // 2. Si la IA no detecta una respuesta clara, no hacemos nada.\n    if (!respuestaDetectada || respuestaDetectada.trim().length < 1) {\n      return undefined;\n    }\n\n    // 3. Convertimos la respuesta a min√∫sculas.\n    const textoEnMinusculas = respuestaDetectada.toLowerCase();\n\n    // 4. Devolvemos el TEXTO 'S√≠' o 'No' (entre comillas).\n    if (textoEnMinusculas.includes('si')) {\n      return 'si'; // CORREGIDO: 'S√≠' debe ser un texto entre comillas.\n    }\n\n    if (textoEnMinusculas.includes('no')) {\n      return 'no'; // CORREGIDO: 'No' debe ser un texto entre comillas.\n    }\n\n    // 5. Si la respuesta es ambigua, no actualizamos.\n    return undefined;\n  })()\n}}"}]}},"type":"n8n-nodes-base.nocoDbTool","typeVersion":3,"position":[6576,2224],"id":"3a90e648-19a4-427a-93e8-2f5e3ebec4ed","name":"actualizar"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"4e39925c-14ca-4ae6-8d94-89524b0dd2ea","leftValue":"={{ $json.esUbicacionTiempoReal }}","rightValue":true,"operator":{"type":"boolean","operation":"true","singleValue":true}}],"combinator":"or"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[1440,736],"id":"f2577b1e-843e-417a-9471-c5d5916a3817","name":"If val Ubicacion"},{"parameters":{"jsCode":"const clienteLat = $input.first().json.ubicacionLat  ;  // Reemplaza si tienes esta data como input din√°mico\nconst clienteLon = $input.first().json.ubicacionLon;\n\n// Lista de sucursales\nconst sucursales = [\n  { nombre: \"Praderas de Sandino\", lat: 12.1540177, lon: -86.3503015 },\n  { nombre: \"Linda Vista\", lat: 12.1458204, lon: -86.3050441 },\n  { nombre: \"Veracruz\", lat: 12.0565542, lon: -86.2025152 },\n  { nombre: \"Los Robles\", lat: 12.1209918, lon: -86.2610926 },\n  { nombre: \"Altagracia\", lat: 12.130459, lon: -86.2978178 },\n  { nombre: \"Santa Ana\", lat: 12.1563072, lon: -86.2850475 },\n  { nombre: \"Bello Horizonte\", lat: 12.1449041, lon: -86.2327981 }\n];\n\n// Funci√≥n de distancia euclidiana (r√°pida)\nfunction distancia(lat1, lon1, lat2, lon2) {\n  const dLat = lat1 - lat2;\n  const dLon = lon1 - lon2;\n  return Math.sqrt(dLat * dLat + dLon * dLon);\n}\n\n// Buscar la sucursal m√°s cercana\nlet sucursalCercana = null;\nlet distanciaMinima = Infinity;\n\nfor (const s of sucursales) {\n  const dist = distancia(clienteLat, clienteLon, s.lat, s.lon);\n  if (dist < distanciaMinima) {\n    distanciaMinima = dist;\n    sucursalCercana = s;\n  }\n}\n\nreturn [\n  {\n    sucursal: sucursalCercana.nombre,\n    sucursalLat: sucursalCercana.lat,\n    sucursalLon: sucursalCercana.lon,\n    distanciaLineal: distanciaMinima\n  }\n];\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[2128,624],"id":"769c75b2-76cf-4994-8e6b-934fc416b844","name":"Encontrar sucursal m√°s cercana"},{"parameters":{"jsCode":"// -------------------------------------------------\n// Inputs esperados desde un nodo previo (Set o Code)\n// -------------------------------------------------\n\n\n\n\nconst origenLat = $('If val Ubicacion').first().json.ubicacionLat;\nconst origenLon = $('If val Ubicacion').first().json.ubicacionLon\n\nconst destinoLat = $input.first().json.sucursalLat\n  \nconst destinoLon =$input.first().json.sucursalLon\n  \n\n// Construir URL manualmente\nconst url = `https://maps.googleapis.com/maps/api/distancematrix/json?origins=${origenLat},${origenLon}&destinations=${destinoLat},${destinoLon}&units=metric&mode=driving&key=${apiKey}`;\n\n// Hacer la petici√≥n HTTP\nconst response = await this.helpers.httpRequest({\n  method: 'GET',\n  url: url,\n  json: true\n});\n\n// Procesar la respuesta\nif (response.status !== 'OK' || !response.rows?.length) {\n  throw new Error('Distance Matrix API error: ' + JSON.stringify(response));\n}\n\n const element = response.rows[0].elements[0];\n// if (element.status !== 'OK') {\n//   throw new Error('Distance Matrix element status: ' + element.status);\n// }\n\nconst distanciaMetros = element.distance.value;\nconst distanciaKm = Math.ceil(distanciaMetros / 1000);\nconst duracionSegs = element.duration.value;\nconst duracionMin = Math.round(duracionSegs / 60);\n\n// Devolver resultado\nreturn [\n  {\n    distanciaKm,\n    duracionMin,\n    textoDistancia: element.distance.text,\n    textoDuracion: element.duration.text,\n    raw: response\n  }\n];\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[2368,624],"id":"313516b7-8242-4736-8e94-4c10290a24a9","name":"Distance Matrix"},{"parameters":{"jsCode":"// Obtenemos datos base\nconst distanciaKm =$input.first().json.distanciaKm;\n\nconst sucursal = $('Encontrar sucursal m√°s cercana').first().json.sucursal;\n\n// Tabla de tarifas por km\nconst tarifas = {\n  1: 70,\n  2: 80,\n  3: 90,\n  4: 100,\n  5: 110,\n  6: 120,\n  7: 130,\n  8: 140,\n  9: 150,\n  10: 160,\n  11: 170,\n  12: 180,\n  13: 190,\n  14: 200,\n  15: 210\n};\n\n// Redondeamos los km, m√≠nimo 1, m√°ximo 15\nconst kmRedondeado = Math.min(Math.max(Math.floor(distanciaKm), 1), 15);\n\n// Asignamos el costo seg√∫n tarifa o el m√°ximo si por alguna raz√≥n km no est√° en rango\nconst costo = tarifas[kmRedondeado] || tarifas[15];\n\n// Retornamos todo embebido en DetalleEnvio\nreturn [\n  {\n    json: {\n      DetalleEnvio: {\n        sucursal,\n        distanciaKm,\n        kmRedondeado,\n        costoEnvio: costo\n      }\n    }\n  }\n];\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[2592,624],"id":"b483eaaa-e577-4ce3-a75c-da5b5558bd25","name":"Costo del Envio"},{"parameters":{"authentication":"nocoDbApiToken","operation":"update","projectId":"p4ux4pbadqc3jkp","table":"m6fpdkibwdxg9cc","fieldsUi":{"fieldValues":[{"fieldName":"ubicacionLat","fieldValue":"={{ $('If val Ubicacion').item.json.ubicacionLat }}"},{"fieldName":"ubicacionLon","fieldValue":"={{ $('If val Ubicacion').item.json.ubicacionLon }}"},{"fieldName":"esUbicacionTiempoReal","fieldValue":"=true"},{"fieldName":"sucursalDespacho","fieldValue":"={{ $json.DetalleEnvio.sucursal }}"},{"fieldName":"distanciaKm","fieldValue":"={{ $json.DetalleEnvio.distanciaKm }}"},{"fieldName":"costoEnvio","fieldValue":"={{ $json.DetalleEnvio.costoEnvio }}"},{"fieldName":"Id","fieldValue":"={{ $('data').item.json.idPedido }}"}]}},"type":"n8n-nodes-base.nocoDb","typeVersion":3,"position":[2528,880],"id":"65bf5794-e17c-452f-8e8c-477b52528c7a","name":"actualizarEnvio","retryOnFail":true,"onError":"continueRegularOutput"},{"parameters":{"jsCode":"const telefono = $('datosImportantes').first().json.numero\nconst formula = `(telefono,eq,${telefono})~and(estadoPedido,eq,pendiente_cliente)`;\n\n\nreturn [{ json: { formula } }];\n\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[5424,912],"id":"5c9738cc-6f8f-4745-b7fd-591c22460f6d","name":"pedido"},{"parameters":{"jsCode":"const item = $input.first()?.json;\n\nif (!item) {\n  return [{\n    json: {\n      pedido_cliente: {\n        telefono: null,\n        tipo: null,\n        entrega: null,\n        formaPago: null,\n        sucursalDespacho: null,\n        fechaHoraPedido: null,\n        estadoPedido: null,\n        nombre: null,\n        combo: null,\n        salsas: [],\n        extras: [],\n        bebidas: [],\n        alitasBa√±adas: false,\n        comentarios: null,\n        ubicacionLat: null,\n        ubicacionLon: null,\n        distanciaKm: null,\n        costoEnvio: null,\n        deliveryAsignado: null\n      },\n      esPrimerMensaje: false\n    }\n  }];\n}\n\nconst pedido_cliente = {\n  telefono: item.telefono ?? null,\n  tipo: item.tipo ?? null,\n  entrega: item.entrega ?? null,\n  formaPago: item.formaPago ?? null,\n  sucursalDespacho: item.sucursalDespacho ?? null,\n  fechaHoraPedido: item.fechaHoraPedido ?? null,\n  estadoPedido: item.estadoPedido ?? null,\n  nombre: item.nombre ?? null,\n  combo: item.combo ?? null,\n  salsas: item.salsas ?? [],\n  alasBa√±adas: item.alitasBa√±adas ?? false,\n  extras: item.extras ?? [],\n  bebidas: item.bebidas ?? [],\n  comentarios: item.comentarios ?? null,\n  ubicacionLat: item.ubicacionLat ?? null,\n  ubicacionLon: item.ubicacionLon ?? null,\n  distanciaKm: item.distanciaKm ?? null,\n  costoEnvio: item.costoEnvio ?? null,\n  deliveryAsignado: item.deliveryAsignado ?? null\n};\n\nreturn [{\n  json: {\n    pedido_cliente,\n    \n  }\n}];\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[5872,912],"id":"5b36d41f-f2e7-43e7-8517-e0e8884d8ed8","name":"compra"},{"parameters":{"jsCode":"// Recibimos el objeto 'pedido_cliente' del nodo 'compra'.\nconst pedido = $('compra').first().json.pedido_cliente;\n\n// --- OBTENCI√ìN DIN√ÅMICA DE PRECIOS ---\n\n// Funci√≥n para convertir los datos de los nodos de precios en un diccionario.\nfunction crearDiccionarioDePrecios(items, nombreColumna, precioColumna) {\n  const diccionario = {};\n  for (const item of items) {\n    const nombre = item.json[nombreColumna];\n    const precio = item.json[precioColumna];\n    if (nombre && typeof precio === 'number') {\n      diccionario[normalizarTexto(nombre)] = precio;\n    }\n  }\n  return diccionario;\n}\n\n// Obtenemos todos los √≠tems de los nodos de informaci√≥n.\nconst combosItems = $('infoCombos').all();\nconst extrasItems = $('infoExtras').all();\nconst bebidasItems = $('infoBebidas').all();\nconst banioItems = $('infoBanio').all();\n\n// Creamos los diccionarios de precios din√°micamente.\nconst preciosCombos = crearDiccionarioDePrecios(combosItems, 'Nombre', 'Precio');\nconst preciosExtras = crearDiccionarioDePrecios(extrasItems, 'Nombre', 'Precio');\nconst preciosBebidas = crearDiccionarioDePrecios(bebidasItems, 'Nombre', 'Precio');\nconst preciosBa√±ado = crearDiccionarioDePrecios(banioItems, 'Nombre', 'Precio');\n\n\n// --- FUNCIONES AUXILIARES ---\n\nfunction normalizarTexto(texto) {\n  if (typeof texto !== 'string') return '';\n  return texto.toLowerCase().trim().normalize('NFD').replace(/[\\u0300-\\u036f]/g, '').replace(/[^\\w\\s]/g, ' ').replace(/\\s+/g, ' ').trim();\n}\n\n// --- C√ÅLCULO DEL TOTAL ---\nlet costoTotal = 0;\nlet resumenItems = [];\n\n// 1. Sumar el precio del combo\nconst comboKey = pedido.combo ? normalizarTexto(pedido.combo) : \"\";\nif (pedido.combo && preciosCombos[comboKey]) {\n  const precioCombo = preciosCombos[comboKey];\n  costoTotal += precioCombo;\n  resumenItems.push(`- Combo: ${pedido.combo} (C$${precioCombo})`);\n}\n\n// 2. Sumar el precio de los extras\nif (pedido.extras && pedido.extras !== 'Ninguno') {\n  const extrasList = Array.isArray(pedido.extras) ? pedido.extras : pedido.extras.split(', ');\n  let extrasTexto = [];\n  for (const extra of extrasList) {\n    const extraNormalizado = normalizarTexto(extra);\n    if (preciosExtras[extraNormalizado]) {\n      const precioExtra = preciosExtras[extraNormalizado];\n      costoTotal += precioExtra;\n      extrasTexto.push(`${extra.trim()} (C$${precioExtra})`);\n    }\n  }\n  if (extrasTexto.length > 0) {\n    resumenItems.push(`- Extras: ${extrasTexto.join(', ')}`);\n  }\n}\n\n// --- SECCI√ìN MODIFICADA ---\n// 3. Sumar el precio de las bebidas (con l√≥gica para Combo Infantil)\nif (pedido.bebidas && pedido.bebidas !== 'Ninguna') {\n  const esComboInfantil = normalizarTexto(pedido.combo) === 'combo infantil';\n  let bebidaGratisAplicada = false; // Bandera para controlar la bebida gratuita\n\n  const bebidasList = Array.isArray(pedido.bebidas) ? pedido.bebidas : pedido.bebidas.split(', ');\n  let bebidasTexto = [];\n\n  for (const bebida of bebidasList) {\n    const bebidaNormalizada = normalizarTexto(bebida);\n    if (preciosBebidas[bebidaNormalizada]) {\n      const precioBebida = preciosBebidas[bebidaNormalizada];\n\n      // Si es combo infantil y a√∫n no hemos aplicado la bebida gratis, esta es la incluida.\n      if (esComboInfantil && !bebidaGratisAplicada) {\n        bebidasTexto.push(`${bebida.trim()} (Incluida)`);\n        bebidaGratisAplicada = true; // Marcamos que la bebida gratis ya fue aplicada.\n      } else {\n        // Para cualquier otro combo, o para bebidas ADICIONALES en el combo infantil, se cobra normal.\n        costoTotal += precioBebida;\n        bebidasTexto.push(`${bebida.trim()} (C$${precioBebida})`);\n      }\n    }\n  }\n  if (bebidasTexto.length > 0) {\n    resumenItems.push(`- Bebidas: ${bebidasTexto.join(', ')}`);\n  }\n}\n// --- FIN DE LA SECCI√ìN MODIFICADA ---\n\n// 4. Sumar el costo de Alitas Ba√±adas si aplica\nif (pedido.alasBa√±adas === 'si' && pedido.combo) {\n    const comboBa√±adoKey = normalizarTexto(pedido.combo);\n    // Buscamos un precio de ba√±ado que coincida con el combo\n    for (const [nombreBa√±ado, precioBa√±ado] of Object.entries(preciosBa√±ado)) {\n        if (nombreBa√±ado.includes(comboBa√±adoKey.replace('combo ',''))) {\n            costoTotal += precioBa√±ado;\n            resumenItems.push(`- Adicional Alitas Ba√±adas: C$${precioBa√±ado}`);\n            break; // Salimos del bucle una vez encontrado el precio\n        }\n    }\n}\n\n// 5. Sumar el costo de env√≠o si existe\nif (pedido.costoEnvio && pedido.costoEnvio > 0) {\n  costoTotal += pedido.costoEnvio;\n}\n\n// --- GENERACI√ìN DEL MENSAJE DE RESUMEN ---\nlet mensaje = `¬°Perfecto! Aqu√≠ tienes el resumen final de tu pedido:\\n\\n`;\nmensaje += `${resumenItems.join('\\n')}\\n`;\nmensaje += `\\n- Entrega: ${pedido.entrega}\\n`;\nmensaje += `- Forma de pago: ${pedido.formaPago}\\n`;\n\nif (pedido.costoEnvio && pedido.costoEnvio > 0) {\n    mensaje += `\\nCosto de Env√≠o: C$${pedido.costoEnvio}\\n`;\n}\n\nmensaje += `\\n**TOTAL A PAGAR: C$${costoTotal}**\\n\\n`;\nmensaje += `¬øDeseas confirmar y enviar tu pedido? (Responde 'confirmar' para procesar tu pedido)`;\n\n// Devolvemos el resultado\nreturn [{\n  json: {\n    mensajeDeConfirmacion: mensaje,\n    totalCalculado: costoTotal\n  }\n}];"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[6912,928],"id":"7bb6584e-4ac4-46dc-b6b5-db130e98cac4","name":"Calcular_Total_y_Resumen"},{"parameters":{"assignments":{"assignments":[{"id":"1075cecc-ac26-4178-96e9-47bd90085d19","name":"numero","value":"={{ $('Webhook').item.json.body.conversation.messages[0].sender.phone_number }}","type":"string"},{"id":"2092f10c-6a45-4c24-aaa5-0699a1ddc565","name":"message","value":"={{ $json.body.conversation.messages[0].content }}","type":"string"},{"id":"d685e863-a71a-421c-b026-fe9abfb6648f","name":"idConversacion","value":"={{ $('Webhook').item.json.body.conversation.messages[0].conversation_id }}","type":"string"},{"id":"6341186c-4b12-4625-88fb-e879567a3cd9","name":"sesionID","value":"={{ $('Webhook').item.json.body.sender.phone_number }}","type":"string"},{"id":"2906baca-460d-4f46-9287-76e7d8a00c24","name":"accountID","value":"={{ $('Webhook').item.json.body.conversation.messages[0].account_id }}","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[-2400,1152],"id":"8578c5be-528a-4688-a991-10a6e6abfcb8","name":"datosImportantes"},{"parameters":{"jsCode":"const telefono = $('datosImportantes').first().json.numero\nconst formula = `(telefono,eq,${telefono})~and(estadoPedido,eq,pendiente_cliente)`;\n\n\nreturn [{ json: { formula } }];\n\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[2800,1168],"id":"68b6830b-1255-43be-b4f6-a5e7ad2cba8c","name":"pedidoActivo"},{"parameters":{"authentication":"nocoDbApiToken","operation":"getAll","projectId":"p4ux4pbadqc3jkp","table":"m6fpdkibwdxg9cc","options":{"where":"={{ $json.formula }}"}},"type":"n8n-nodes-base.nocoDb","typeVersion":3,"position":[5648,912],"id":"a4a28e23-4825-4261-b165-9ae93144c538","name":"pendiente"},{"parameters":{"jsCode":"const content = $input.first().json.ubicacion;\nconst regexLat = /\\*Latitude:\\*\\s*(-?\\d+(\\.\\d+)?)/i;\nconst regexLon = /\\*Longitude:\\*\\s*(-?\\d+(\\.\\d+)?)/i;\n\nconst matchLat = content.match(regexLat);\nconst matchLon = content.match(regexLon);\n\n// Tomar el tel√©fono del remitente si existe\nconst telefono = $input.first().json.numero;\n\nif (matchLat && matchLon) {\n  const lat = parseFloat(matchLat[1]);\n  const lon = parseFloat(matchLon[1]);\n\n  return [\n    {\n      esUbicacionTiempoReal: true,\n      ubicacionLat: lat,\n      ubicacionLon: lon,\n      telefono: telefono,\n      mensaje: \"üìç Ubicaci√≥n en tiempo real detectada en el texto.\"\n    }\n  ];\n} else {\n  return [\n    {\n      esUbicacionTiempoReal: false,\n      telefono: telefono,\n      mensaje: \"‚ùå No se encontr√≥ ubicaci√≥n en el contenido del mensaje.\"\n    }\n  ];\n}\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[1040,832],"id":"50e6bbb7-4788-4a27-9b8f-f4715544b7f2","name":"Verifica si es una ubicaci√≥n v√°lida","retryOnFail":true,"maxTries":2,"alwaysOutputData":true,"onError":"continueRegularOutput"},{"parameters":{"rules":{"values":[{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"leftValue":"={{ $json.pedidoExistente }}","rightValue":"","operator":{"type":"boolean","operation":"true","singleValue":true},"id":"3a5f643d-e75d-4cac-9d83-33c42f7f52ce"}],"combinator":"and"},"renameOutput":true,"outputKey":"pendiente_cliente"},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"9cc8eb4b-d7a0-4bf8-bb79-767ffbb8afd7","leftValue":"={{ $('Cliente o Nuevo').first.json.clienteExistente }}","rightValue":"","operator":{"type":"boolean","operation":"false","singleValue":true}}],"combinator":"and"},"renameOutput":true,"outputKey":"Cliente_Nuevo"}]},"options":{"fallbackOutput":"extra"}},"type":"n8n-nodes-base.switch","typeVersion":3.2,"position":[-816,1136],"id":"df1501bf-ce13-4de3-9bc1-c40c3bd9d0c9","name":"Router Principal"},{"parameters":{"content":"## verificacion de cliente nuevo o frecuente","height":240,"width":416,"color":4},"type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[-1760,1072],"id":"942884cc-66e5-4fe5-b2c6-35e9fb901993","name":"Sticky Note"},{"parameters":{"content":"## verificacion si hay historial de pedido","height":240,"width":464},"type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[-2224,1072],"id":"fa256f15-786a-425c-9f5f-2bc280c3ced9","name":"Sticky Note1"},{"parameters":{"content":"## verificacion si pedido anterior es True y pedido anterior aun pendiente","height":240,"width":464,"color":5},"type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[-1344,1072],"id":"f5a5393c-4e2f-4634-ba06-ed6078537ee0","name":"Sticky Note2"},{"parameters":{"content":"## cliente nuevo o pedido anterior completado","height":416,"width":416},"type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[864,992],"id":"85928884-a6d2-4d2b-9e40-3d6228a7e83e","name":"Sticky Note3"},{"parameters":{"content":"## confirmacion de pedido actual","height":336,"width":1248,"color":3},"type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[144,432],"id":"b1e13127-729b-4323-84fc-07bd63f4435d","name":"Sticky Note4"},{"parameters":{"content":"## cancelacion de pedido actual","height":368,"width":976,"color":6},"type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[0,0],"id":"68f41d4c-a0cc-4b48-aa79-8fac38aa05ae","name":"Sticky Note5"},{"parameters":{"content":"## calculo de envio cuando es delivery","height":560,"width":864,"color":6},"type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[2016,480],"id":"d9299937-b7a4-46a4-a166-3971afea66b1","name":"Sticky Note6"},{"parameters":{"content":"## Busqueda de opciones disponibles","height":1072,"width":3360,"color":2},"type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[2240,1568],"id":"c68bc7c6-2ab4-41ee-8730-9e231486a7af","name":"Sticky Note7"},{"parameters":{"content":"## actualizacion del pedido","height":528,"width":656,"color":4},"type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[5680,1904],"id":"5eb1d917-88f6-4ce0-8e26-87eaf2b110fb","name":"Sticky Note8"},{"parameters":{"content":"## calculo de los costos del pedido","height":784,"width":1776,"color":6},"type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[4944,624],"id":"6344ad92-d41b-4475-bcf6-6edae4e24ca6","name":"Sticky Note9"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"7f9148f2-649b-44a3-a9d8-738eae178edc","leftValue":"={{ $('Cliente o Nuevo').first().json.clienteExistente }}","rightValue":"","operator":{"type":"boolean","operation":"true","singleValue":true}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[448,1152],"id":"b8034508-9fcd-47f1-bf02-2ef723a71900","name":"If"},{"parameters":{"authentication":"nocoDbApiToken","operation":"create","projectId":"p4ux4pbadqc3jkp","table":"m6fpdkibwdxg9cc","fieldsUi":{"fieldValues":[{"fieldName":"telefono","fieldValue":"={{ $('Webhook').first().json.body.conversation.messages[0].sender.phone_number }}"},{"fieldName":"fechaHoraPedido","fieldValue":"={{ $now }}"},{"fieldName":"estadoPedido","fieldValue":"pendiente_cliente"},{"fieldName":"nombre","fieldValue":"={{ $('Cliente o Nuevo').first().json.nombreCliente }}"}]}},"type":"n8n-nodes-base.nocoDb","typeVersion":3,"position":[1024,1072],"id":"d3e4b548-c29a-4ba5-b56a-582d9e04a468","name":"insertarInfo"},{"parameters":{"options":{"maxRetries":2}},"type":"@n8n/n8n-nodes-langchain.lmChatDeepSeek","typeVersion":1,"position":[3904,1376],"id":"de085b7d-d1e4-4374-a35c-3f8cb9f4dd17","name":"DeepSeek Chat Model"},{"parameters":{"options":{"maxRetries":2}},"type":"@n8n/n8n-nodes-langchain.lmChatDeepSeek","typeVersion":1,"position":[6176,2240],"id":"4013a608-51cc-4633-8240-9fb6314a4dad","name":"DeepSeek Chat Model2"},{"parameters":{"assignments":{"assignments":[{"id":"6689291b-1a4e-4d29-a6ac-78f8544d87ac","name":"idConversacion","value":"={{ $('datosImportantes').first().json.idConversacion }}","type":"string"},{"id":"934d41b3-0c12-4d56-bd56-8e1e9b2b7445","name":"accountID","value":"={{ $('datosImportantes').first().json.accountID }}","type":"string"},{"id":"a0d51e78-620d-4205-81f4-5926113fdb41","name":"output","value":"={{ $json.output }}","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[4736,1088],"id":"d871c925-3b85-48d4-94dd-3be43df1eaed","name":"datos"},{"parameters":{"method":"POST","url":"=https://n8n-chatwoot.kwu5pq.easypanel.host/api/v1/accounts/{{ $json.accountID }}/conversations/{{ $json.idConversacion }}/messages","authentication":"genericCredentialType","genericAuthType":"httpHeaderAuth","sendBody":true,"bodyParameters":{"parameters":[{"name":"content","value":"={{ $json.output }}"},{"name":"private","value":"false"}]},"options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[5056,1216],"id":"156e7a80-1991-4d4a-ae42-c7894cc53a75","name":"HTTP Request1","retryOnFail":true},{"parameters":{"method":"POST","url":"=https://n8n-chatwoot.kwu5pq.easypanel.host/api/v1/accounts/{{ $('data').item.json.accountID }}/conversations/{{ $('data').item.json.idConversacion }}/messages","authentication":"genericCredentialType","genericAuthType":"httpHeaderAuth","sendBody":true,"bodyParameters":{"parameters":[{"name":"content","value":"=pedido cancelado"},{"name":"private","value":"false"}]},"options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[672,208],"id":"e37fd919-93a5-46c0-bf49-7d7d4dfcf836","name":"HTTP Request3","retryOnFail":true},{"parameters":{"method":"POST","url":"=https://n8n-chatwoot.kwu5pq.easypanel.host/api/v1/accounts/{{ $('Switch').item.json.accountID }}/conversations/{{ $('Switch').item.json.idConversacion }}/messages","authentication":"genericCredentialType","genericAuthType":"httpHeaderAuth","sendBody":true,"bodyParameters":{"parameters":[{"name":"content","value":"=Pedido confirmado, gracias por elegir alas buenas !"},{"name":"private","value":"false"}]},"options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[1216,464],"id":"1748472b-e53d-49a0-a481-4328cb96989b","name":"HTTP Request4","retryOnFail":true},{"parameters":{"text":"={{ $('datosImportantes').first().json.message }}","attributes":{"attributes":[{"name":"cancelar","description":"Extrae del mensaje si el usuario decide cancelar su pedido, por ejemplo: el mensaje contiene la palabra 'cancelar', 'cancelar pedido'"},{"name":"confirmar","description":"=Extrae del mensaje la confirmacion del cliente, si el mensaje dice algo como: 'Confirmo', 'Confirmar', 'Confirmo el pedido'."},{"name":"combo","description":"=Extrae del mensaje si el combo que el cliente selecciono es `infantil`. Si el mensaje dice algo como: 'Combo infantil', 'infatil', 'quiero el combo infantil', entonces el combo es infatil."}]},"options":{}},"type":"@n8n/n8n-nodes-langchain.informationExtractor","typeVersion":1.2,"position":[-608,816],"id":"03773518-f86b-4302-a835-5b6f79618650","name":"Information Extractor","alwaysOutputData":true,"onError":"continueRegularOutput"},{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatDeepSeek","typeVersion":1,"position":[-512,1008],"id":"55a2444c-287d-48b0-b59e-62d7bcb3ac81","name":"DeepSeek Chat Model3"},{"parameters":{"assignments":{"assignments":[{"id":"1075cecc-ac26-4178-96e9-47bd90085d19","name":"numero","value":"={{ $('Webhook').first().json.body.conversation.messages[0].sender.phone_number }}","type":"string"},{"id":"2092f10c-6a45-4c24-aaa5-0699a1ddc565","name":"message","value":"={{ $('datosImportantes').first().json.message }}","type":"string"},{"id":"6341186c-4b12-4625-88fb-e879567a3cd9","name":"sesionID","value":"={{ $('Webhook').first().json.body.sender.phone_number }}","type":"string"},{"id":"2906baca-460d-4f46-9287-76e7d8a00c24","name":"accountID","value":"={{ $('Webhook').first().json.body.conversation.messages[0].account_id }}","type":"string"},{"id":"5b15425f-c8cd-4dae-b2fd-804fbfae2529","name":"ubicacion","value":"={{ $('Webhook').first().json.body.conversation.messages[0].content }}","type":"string"},{"id":"abe4ae6a-4f13-4eed-b2a4-c326a05408d2","name":"idPedido","value":"={{ $('Pedido pendiente_cliente').first().json.Id }}","type":"string"},{"id":"759603e9-f576-4043-ad64-db2339f5285c","name":"idConversacion","value":"={{ $('datosImportantes').first().json.idConversacion }}","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[-336,816],"id":"32fbeec5-6ada-4d79-864d-913d8edc0eed","name":"data"},{"parameters":{"sessionIdType":"customKey","sessionKey":"={{ $('datosImportantes').first().json.sesionID }}","contextWindowLength":1},"type":"@n8n/n8n-nodes-langchain.memoryBufferWindow","typeVersion":1.3,"position":[4112,1472],"id":"9a6cc6ee-661d-403f-9b79-8ec286933cf2","name":"Simple Memory"},{"parameters":{"descriptionType":"manual","toolDescription":"Usa esta herramienta para extraer los tipos de alas disponibles","authentication":"nocoDbApiToken","operation":"getAll","projectId":"p4ux4pbadqc3jkp","table":"mvcsggs8d37t0os","returnAll":true,"options":{"fields":["Alas"]}},"type":"n8n-nodes-base.nocoDbTool","typeVersion":3,"position":[4432,1936],"id":"f94a096a-70c9-4740-aed3-27cbd3ce05cf","name":"alas"},{"parameters":{"descriptionType":"manual","toolDescription":"Usa esta herramienta para extraer el nombre de las sucursales de despacho","authentication":"nocoDbApiToken","operation":"getAll","projectId":"p4ux4pbadqc3jkp","table":"mgqre9o84drj4jm","returnAll":true,"options":{"fields":["Sucursal"]}},"type":"n8n-nodes-base.nocoDbTool","typeVersion":3,"position":[4816,1840],"id":"68ee60c8-987a-4dea-8961-ce7c2409693b","name":"sucursales"},{"parameters":{"descriptionType":"manual","toolDescription":"Usa esta herramienta para extraer los tipos de pago ","authentication":"nocoDbApiToken","operation":"getAll","projectId":"p4ux4pbadqc3jkp","table":"mihbj69ckz11yo5","returnAll":true,"options":{"fields":["pago"]}},"type":"n8n-nodes-base.nocoDbTool","typeVersion":3,"position":[5168,2000],"id":"d00956ae-d287-48bc-b5ce-062038f9fa9a","name":"pago"},{"parameters":{"descriptionType":"manual","toolDescription":"Usa esta herramienta para extraer los tipos de entrega disponibles","authentication":"nocoDbApiToken","operation":"getAll","projectId":"p4ux4pbadqc3jkp","table":"mlbe2m7gq8k37i1","returnAll":true,"options":{"fields":["entrega"]}},"type":"n8n-nodes-base.nocoDbTool","typeVersion":3,"position":[5568,2048],"id":"0972322e-2cd7-4e4f-9e09-b7c68deb3dd3","name":"entrega"},{"parameters":{"descriptionType":"manual","toolDescription":"Usa esta herramienta √öNICAMENTE para consultar el precio extra por ba√±ar las alitas. La herramienta te devolver√° el precio correcto en c√≥rdobas C$ basado en el tama√±o del combo que el cliente ya eligi√≥","authentication":"nocoDbApiToken","operation":"getAll","projectId":"p4ux4pbadqc3jkp","table":"mhn3nnvkna928di","returnAll":true,"options":{"fields":["Nombre","Precio"]}},"type":"n8n-nodes-base.nocoDbTool","typeVersion":3,"position":[5920,2096],"id":"a1147719-a785-4845-b5cf-a0721539d065","name":"banadas"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"b9197abe-1064-4797-bbd1-c746fc988186","leftValue":"={{ $('pedido existente y pedido entregado').item.json.entregado }}","rightValue":"","operator":{"type":"boolean","operation":"true","singleValue":true}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[160,192],"id":"0e9f18c6-247b-45df-b068-1f867c93be85","name":"If1"},{"parameters":{"method":"POST","url":"=https://n8n-chatwoot.kwu5pq.easypanel.host/api/v1/accounts/{{ $('data').item.json.accountID }}/conversations/{{ $('data').item.json.idConversacion }}/messages","authentication":"genericCredentialType","genericAuthType":"httpHeaderAuth","sendBody":true,"bodyParameters":{"parameters":[{"name":"content","value":"=No puedes cancelar tu pedido porque ya se te entrego."},{"name":"private","value":"false"}]},"options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[672,16],"id":"44b48b72-2a8b-4567-9eda-1350b7caec41","name":"HTTP Request","retryOnFail":true},{"parameters":{"authentication":"nocoDbApiToken","operation":"getAll","projectId":"p4ux4pbadqc3jkp","table":"m6fpdkibwdxg9cc","returnAll":true,"options":{"where":"={{ $json.formula }}"}},"type":"n8n-nodes-base.nocoDb","typeVersion":3,"position":[3008,1152],"id":"1b109639-4b5e-45a4-bd41-070fe3d390df","name":"Pedido pendiente1"},{"parameters":{"authentication":"nocoDbApiToken","operation":"getAll","projectId":"p4ux4pbadqc3jkp","table":"m6fpdkibwdxg9cc","returnAll":true,"options":{"where":"={{ $json.formula }}"}},"type":"n8n-nodes-base.nocoDb","typeVersion":3,"position":[352,608],"id":"6636e791-71b8-46d7-9ffb-979929f64871","name":"Pedido"},{"parameters":{"jsCode":"const telefono = $('datosImportantes').first().json.numero\nconst formula = `(telefono,eq,${telefono})~and(estadoPedido,eq,pendiente_cliente)`;\n\n\nreturn [{ json: { formula } }];\n\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[176,608],"id":"c209d687-c2cc-411c-afbd-6579ed83298a","name":"pedido proceso"},{"parameters":{"jsCode":"// Funci√≥n auxiliar para formatear campos que pueden ser texto o lista\nfunction formatarLista(item) {\n  if (!item || item.length === 0) {\n    return null;\n  }\n  if (Array.isArray(item)) {\n    return item.join(', ');\n  }\n  return item;\n}\n\nconst pedido = $input.first().json;\n\n// --- L√ìGICA DE VERIFICACI√ìN DE CAMPOS OBLIGATORIOS ---\nconst camposFaltantes = [];\n\n// 1. Verificar campos\nif (!pedido.combo) camposFaltantes.push('Combo');\nif (!pedido.tipo) camposFaltantes.push('Tipo de alitas');\nif (pedido.alitasBa√±adas === '' || pedido.alitasBa√±adas == null || pedido.alitasBa√±adas === 'no seleccionado') {\n  camposFaltantes.push('Alitas Ba√±adas');\n}\nif (!pedido.salsas || pedido.salsas.length === 0) camposFaltantes.push('Salsas');\n// --- L√çNEAS A√ëADIDAS ---\nif (!pedido.extras || pedido.extras.length === 0) camposFaltantes.push('Extras');\nif (!pedido.bebidas || pedido.bebidas.length === 0) camposFaltantes.push('Bebidas');\n// --------------------\nif (!pedido.entrega) camposFaltantes.push('Entrega');\nif (!pedido.nombre) camposFaltantes.push('Nombre');\nif (!pedido.formaPago) camposFaltantes.push('Forma de pago');\n\n// 2. Verificar campos condicionales\nif (pedido.entrega === 'Para Llevar' && !pedido.sucursalDespacho) {\n  camposFaltantes.push('Sucursal de despacho');\n}\n\nconst pedidoCompleto = camposFaltantes.length === 0;\n\n\n// --- L√ìGICA PARA EL RESUMEN ---\nlet resumen = \"Estado actual del pedido:\\n\";\n\nconst salsasFormateadas = formatarLista(pedido.salsas);\nconst extrasFormateados = formatarLista(pedido.extras);\nconst bebidasFormateadas = formatarLista(pedido.bebidas);\n\nlet textoAlitasBa√±adas = '(no seleccionado)';\nif (pedido.alitasBa√±adas === 'si') {\n  textoAlitasBa√±adas = 'si';\n} else if (pedido.alitasBa√±adas === 'no' || pedido.alitasBa√±adas === 'no seleccionado') {\n  textoAlitasBa√±adas = 'no';\n}\n\nresumen += `- Combo: ${pedido.combo || ''}\\n`;\nresumen += `- Tipo de alitas: ${pedido.tipo || ''}\\n`;\nresumen += `- Alitas Ba√±adas: ${textoAlitasBa√±adas}\\n`;\nresumen += `- Salsas: ${salsasFormateadas || ''}\\n`;\nresumen += `- Extras: ${extrasFormateados || ''}\\n`;\nresumen += `- Bebidas: ${bebidasFormateadas || ''}\\n`;\nresumen += `- Entrega: ${pedido.entrega || ''}\\n`;\nresumen += `- Nombre: ${pedido.nombre || ''}\\n`;\nresumen += `- Forma de pago: ${pedido.formaPago || ''}\\n`;\nresumen += `- Sucursal despacho: ${pedido.sucursalDespacho || ''}\\n`;\n\n\n// --- SALIDA MODIFICADA ---\nreturn [{\n  json: {\n    resumenEstado: resumen,\n    pedidoCompleto: pedidoCompleto,\n    camposFaltantes: camposFaltantes\n  }\n}];"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[544,608],"id":"a3c8f337-1179-49d9-9e4a-eb5c83b82f0e","name":"analizarPedido"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"e7ca3355-8ece-478f-9322-b42410ba466e","leftValue":"={{ $json.pedidoCompleto }}","rightValue":"","operator":{"type":"boolean","operation":"true","singleValue":true}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[736,608],"id":"b36cea0d-9ca9-4649-979d-e75552a1f415","name":"If2"},{"parameters":{"authentication":"nocoDbApiToken","operation":"update","projectId":"p4ux4pbadqc3jkp","table":"m6fpdkibwdxg9cc","fieldsUi":{"fieldValues":[{"fieldName":"Id","fieldValue":"={{ $('Pedido').item.json.Id }}"},{"fieldName":"estadoPedido","fieldValue":"confirmado_sucursal"},{"fieldName":"fecha_pedido_confirmado","fieldValue":"={{ $now }}"}]}},"type":"n8n-nodes-base.nocoDb","typeVersion":3,"position":[976,464],"id":"5738c3a4-a270-4b67-a0e5-cce7f63d0d10","name":"Update estado pedido"},{"parameters":{"method":"POST","url":"=https://n8n-chatwoot.kwu5pq.easypanel.host/api/v1/accounts/{{ $('Switch').first().json.accountID }}/conversations/{{ $('Switch').first().json.idConversacion }}/messages","authentication":"genericCredentialType","genericAuthType":"httpHeaderAuth","sendBody":true,"bodyParameters":{"parameters":[{"name":"content","value":"=No puedes confirmar el pedido todavia porque faltan los siguiente datos:\n{{ $json.camposFaltantes }}\nContinua con el pedido para completarlo y asi poder confirmar tu orden."},{"name":"private","value":"false"}]},"options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[1120,624],"id":"af3ccf14-99a3-44f5-9e31-5a9b1a30f6d0","name":"HTTP Request5","retryOnFail":true,"credentials":{"httpHeaderAuth":{"id":"wuQnRV7xw6UeeACn","name":"Header Auth account"}}},{"parameters":{"authentication":"nocoDbApiToken","operation":"update","projectId":"p4ux4pbadqc3jkp","table":"m6fpdkibwdxg9cc","fieldsUi":{"fieldValues":[{"fieldName":"total","fieldValue":"={{ $json.totalCalculado }}"},{"fieldName":"Id","fieldValue":"={{ $('pendiente').first().json.Id }}"}]}},"type":"n8n-nodes-base.nocoDb","typeVersion":3,"position":[7168,928],"id":"e074763b-cc61-46c1-8236-2b95a04d1409","name":"total"},{"parameters":{"toolDescription":"√ösala para obtener la lista de extras disponibles cuando el campo 'Extras' est√© vac√≠o.","text":"={{ $('datosImportantes').first().json.message }}    ","options":{"systemMessage":"=Tu √∫nica misi√≥n es ejecutar la herramienta extras para obtener la lista de extras disponibles. No hagas ninguna otra acci√≥n.\n\n=# PROCESO\n1. Ejecutar la herramienta extras\n2. Brindar al cliente la lista de extras para que pueda elejir uno\n3.  Formula una respuesta para el cliente que sea conversacional e incluya las opciones con emojis relevantes"}},"type":"@n8n/n8n-nodes-langchain.agentTool","typeVersion":2.2,"position":[3056,1920],"id":"87ec1215-cd27-478a-8f0c-917496cc15dd","name":"tomaExtras"},{"parameters":{"toolDescription":"√ösala para obtener la lista de bebidas disponibles cuando el campo 'Bebidas' est√© vac√≠o.","text":"={{ $('datosImportantes').first().json.message }}    ","options":{"systemMessage":"=Tu √∫nica misi√≥n es ejecutar la herramienta bebidas para obtener la lista de bebidas disponibles. No hagas ninguna otra acci√≥n.\n\n=# PROCESO\n1. Ejecutar la herramienta bebidas\n2. Brindar al cliente la lista de bebidas para que pueda elejir uno\n3.  Formula una respuesta para el cliente que sea conversacional e incluya las opciones con emojis relevantes"}},"type":"@n8n/n8n-nodes-langchain.agentTool","typeVersion":2.2,"position":[3840,1760],"id":"5adb5238-0e4f-47f3-a71c-59ee30234140","name":"tomaBebidas"},{"parameters":{"toolDescription":"√ösala para obtener los tipos de alitas v√°lidos (ej. Fritas, Empanizadas) cuando el campo 'Tipo de alitas' est√© vac√≠o.","text":"={{ $('datosImportantes').first().json.message }}    ","options":{"systemMessage":"==# MISI√ìN\nTu misi√≥n es doble:\n1.  Ejecutar OBLIGATORIAMENTE la herramienta `alas` para obtener la lista de tipos de alitas disponibles.\n2.  Presentar estas opciones al cliente de forma amigable, usando emojis, y terminar siempre con una pregunta clara para que el cliente elija.\n\n=# PROCESO\n1.  Llama a la herramienta `alas`.\n2.  Toma la lista de opciones que te devuelve (ej: Fritas, Empanizadas).\n3.  Formula una respuesta para el cliente que sea conversacional e incluya las opciones con emojis relevantes.\n\n=# EJEMPLO DE RESPUESTA PERFECTA\n\"¬°Claro! Para tus alitas, tenemos dos estilos deliciosos:\\n\\n- **Fritas** üçü \\n- **Empanizadas** üçó \\n¬øC√≥mo las prefieres?\"\n"}},"type":"@n8n/n8n-nodes-langchain.agentTool","typeVersion":2.2,"position":[4240,1616],"id":"555ee351-c891-4391-ba5e-1c705f65cbd1","name":"tomaAlas"},{"parameters":{"toolDescription":"√ösala para obtener la lista de combos disponibles cuando el campo 'Combo' est√© vac√≠o.","text":"={{ $('datosImportantes').first().json.message }}    ","options":{"systemMessage":"=Tu misi√≥n es dar la bienvenida la cliente dandole las gracias por elegir `alas buenas` el cual es el nombre del restaurante, inmediantamente debes ejecutar la herramienta combos para obtener la lista de combos disponibles. No hagas ninguna otra acci√≥n.\n\n=# OBLIGATORIO\n-Los precios de los combos deben mostrarse en cordobas C$\n\n=# PROCESO\n1. Ejecutar la herramienta combos\n2. Brindar al cliente la lista de combos para que pueda elejir uno\n3.  Formula una respuesta para el cliente que sea conversacional e incluya las opciones con emojis relevantes\n\n=# EJEMPLO DE RESPUESTA EXITOSA\n\n\"¬°Excelente! üòä Aqu√≠ tienes nuestros deliciosos combos disponibles:\n\nüçó COMBO 24 - 800 C$\n- 24 piezas de pollo\n- 4 salsas a elecci√≥n\n\nüçó COMBO 12 - 490 C$  \n- 12 piezas de pollo\n- 2 salsas a elecci√≥n\n\nüçó COMBO 6 - 250 C$\n- 6 piezas de pollo\n- 1 salsa por defecto\n\nüçó COMBO 100 üéâ - 3,200 C$\n- 100 piezas de pollo (¬°ideal para fiestas!)\n- 10 salsas a elecci√≥n\n\nüçó COMBO 50 - 1,950 C$\n- 50 piezas de pollo\n- 5 salsas a elecci√≥n\n\nüçó COMBO 18 - 680 C$\n- 18 piezas de pollo\n- 3 salsas a elecci√≥n\n\nüë∂ COMBO INFANTIL üßÉ - 140 C$\n- 4 piezas de pollo\n- Salsa de tomate\n- ¬°Incluye bebida!\n\n¬øCu√°l de estos combos te gustar√≠a pedir? üçó‚ú®\""}},"type":"@n8n/n8n-nodes-langchain.agentTool","typeVersion":2.2,"position":[2384,2224],"id":"c59dbbc0-ec61-48e3-a7a0-7a5430c4dcd1","name":"tomaCombos"},{"parameters":{"toolDescription":"√ösala para obtener la lista de salsas disponibles cuando el campo 'Salsas' est√© vac√≠o.","text":"={{ $('datosImportantes').first().json.message }}    ","options":{"systemMessage":"==# MISI√ìN\nTu unica misi√≥n es:\n1.  Ejecutar OBLIGATORIAMENTE la herramienta `salsas` para obtener la lista de tipos de alitas disponibles.\n2.  Presentar estas opciones al cliente de forma amigable, usando emojis, y terminar siempre con una pregunta clara para que el cliente elija.\n3. Indicale al cliente la cantidad de salsas permitidas en el combo que el cliente selecciono, la cantidad permitida por combos es la siguiente: \n- combo 6 = 1 salsa\n- combo 12 y combo 18 = 2 salsas\n- combo 24 = 4 salsas\n- combo 50 = 5 salsas\n- combo 100 = 10 salsas\n- combo infantil = ya tiene 1 salsa por defecto 'salsa tomate'\nPuedes ver que combo selecciono el cliente en el {{ $('Crear Resumen de Estado').first().json.resumenEstado.split('\\n').slice(0, 2).join('\\n') }}\n\nSi el cliente menciona mas salsas de las permitidas recuerdale que su combo solo permite cierta cantidad de salsas y tendra que volver a elegir las salsas\n\n=# PROCESO\n1.  Llama a la herramienta `salsas`.\n2.  Toma la lista de opciones que te devuelve (ej: BBQ, Teriyaki).\n3.  Formula una respuesta para el cliente que sea conversacional e incluya las opciones con emojis relevantes.\n\n=# EJEMPLO DE RESPUESTA PERFECTA\n¬°Perfecto! Aqu√≠ tienes la lista completa de nuestras salsas disponibles:\nüå∂ Salsas Picantes:\n- Mango Habanero - Dulce y muy picante\n- Chipotle - Ahumado y picante  \n- Buffalo - Cl√°sica picante y √°cida\nüçã Salsas No Picantes:\n- Ajo Parmesano - Suave con ajo y queso parmesano\n- Lim√≥n y Pimienta - Refrescante con toque c√≠trico\n- BBQ - Barbacoa tradicional\n- Teriyaki - Sabor oriental dulce\nRecordatorio importante: Tu combo 6 solo permite 1 salsa. Por favor elige solo una de las opciones¬†disponibles.\n\n\n\n\n"}},"type":"@n8n/n8n-nodes-langchain.agentTool","typeVersion":2.2,"position":[2752,2080],"id":"e75753d7-8726-4e74-b6b3-367a54416cd2","name":"tomaSalsas"},{"parameters":{"toolDescription":"√ösala para obtener la lista de sucursales cuando el campo 'Sucursal despacho' est√© vac√≠o.","text":"={{ $('datosImportantes').first().json.message }}    ","options":{"systemMessage":"=Tu √∫nica misi√≥n es ejecutar la herramienta sucursales para obtener la lista de sucursales disponibles. No hagas ninguna otra acci√≥n.\n\n=# PROCESO\n1. Ejecutar la herramienta sucursales \n2. Brindar al cliente la lista de sucursales para que pueda elejir uno\n3.  Formula una respuesta para el cliente que sea conversacional e incluya las opciones con emojis relevantes"}},"type":"@n8n/n8n-nodes-langchain.agentTool","typeVersion":2.2,"position":[4608,1600],"id":"4f85a797-2ef7-4eb5-bf64-feebfbef2292","name":"tomaSucursales"},{"parameters":{"toolDescription":"√ösala para obtener las formas de pago v√°lidas cuando el campo 'Forma de pago' est√© vac√≠o.","text":"={{ $('datosImportantes').first().json.message }}    ","options":{"systemMessage":"=Tu √∫nica misi√≥n es ejecutar la herramienta pago para obtener la lista de formas de pago disponibles. No hagas ninguna otra acci√≥n.\n\n=# PROCESO\n1. Ejecutar la herramienta pago\n2. Brindar al cliente las formas de pago para que pueda elejir uno\n3.  Formula una respuesta para el cliente que sea conversacional e incluya las opciones con emojis relevantes\n\n=# EJEMPLO DE RESPUESTA PERFECTA\n¬øC√≥mo prefieres pagar tu pedido? Tenemos estas opciones disponibles:\n1.üí∏ Efectivo\n2.üì± Transferencia¬†¬†\n3.üí≥ Tarjeta"}},"type":"@n8n/n8n-nodes-langchain.agentTool","typeVersion":2.2,"position":[4960,1680],"id":"3a63976a-bbf9-4479-92c0-505a7197826e","name":"tomaPago"},{"parameters":{"toolDescription":"√ösala para obtener los tipos de entrega v√°lidos cuando el campo 'Entrega' est√© vac√≠o.","text":"={{ $('datosImportantes').first().json.message }}    ","options":{"systemMessage":"=Tu √∫nica misi√≥n es ejecutar la herramienta entrega para obtener la lista de entrega disponibles. \nNo hagas ninguna otra acci√≥n.\n\n=# PROCESO\n1. Ejecutar la herramienta entrega\n2. Brindar al cliente las formas de entrega para que pueda elejir una\n3.  Formula una respuesta para el cliente que sea conversacional e incluya las opciones con emojis relevantes\n\n=# EJEMPLO DE RESPUESTA PERFECTA\n\"Opciones de entrega disponibles:\nüöó Para Llevar - Recoge tu pedido en nuestro local\nüçΩ Consumo en Restaurante - Disfruta aqu√≠ mismo con nosotros  \nüõµ Delivery - Te lo llevamos hasta la puerta de tu casa\n¬øCu√°l de estas opciones prefieres?¬†üòä\""}},"type":"@n8n/n8n-nodes-langchain.agentTool","typeVersion":2.2,"position":[5328,1776],"id":"5ef9f00c-942b-4931-a4ee-974ad686aed2","name":"tomaEntrega"},{"parameters":{"toolDescription":"√ösala para preguntar al cliente si quiere sus alitas ba√±adas cuando el campo 'Alitas Ba√±adas' est√© vac√≠o.","text":"={{ $('datosImportantes').first().json.message }}    ","options":{"systemMessage":"=Tu √∫nica misi√≥n es preguntar al cliente si desea ba√±ar las alitas en salsa por un coste adicional, ejecutar la herramienta ba√±adas para obtener la lista de precios del ba√±ado. El precio a mostrar depender√° del tipo de combo que el usuario selecciono.\nPuedes ver que combo que selecciono el cliente en el {{ $('Crear Resumen de Estado').first().json.resumenEstado.split('\\n').slice(0, 2).join('\\n') }}\n\n\n=# EJEMPLO DE RESPUESTA PERFECTA\n\"Para tu Combo 18 de alas empanizadas, te ofrecemos la opci√≥n de ba√±ar las alitas en las salsas que elegiste por un costo adicional de C$ 70.\n¬øTe gustar√≠a que ba√±emos tus alitas?\"\n"}},"type":"@n8n/n8n-nodes-langchain.agentTool","typeVersion":2.2,"position":[5696,1888],"id":"7ea819e0-0643-41a0-9b85-03f67b2f8890","name":"tomaBanadas"},{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatDeepSeek","typeVersion":1,"position":[2256,2432],"id":"ff1bb031-d18e-4392-819f-510f9b865249","name":"DeepSeek Chat Model1"},{"parameters":{"sessionIdType":"customKey","sessionKey":"={{ $('datosImportantes').first().json.sesionID }}"},"type":"@n8n/n8n-nodes-langchain.memoryBufferWindow","typeVersion":1.3,"position":[2400,2432],"id":"37038926-ab29-4921-a1e5-1c13d9f4723b","name":"Simple Memory1"},{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatDeepSeek","typeVersion":1,"position":[2656,2304],"id":"d5457f70-9589-498e-af18-4791e4a57d2c","name":"DeepSeek Chat Model4"},{"parameters":{"sessionIdType":"customKey","sessionKey":"={{ $('datosImportantes').first().json.sesionID }}"},"type":"@n8n/n8n-nodes-langchain.memoryBufferWindow","typeVersion":1.3,"position":[2848,2352],"id":"84628f54-aea4-4100-9bf5-f2715adbbd1f","name":"Simple Memory2"},{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatDeepSeek","typeVersion":1,"position":[3008,2192],"id":"8589cd2d-ca23-4432-bd52-77727cdcb7f2","name":"DeepSeek Chat Model5"},{"parameters":{"sessionIdType":"customKey","sessionKey":"={{ $('datosImportantes').first().json.sesionID }}"},"type":"@n8n/n8n-nodes-langchain.memoryBufferWindow","typeVersion":1.3,"position":[3136,2176],"id":"1c121aa1-b2fc-4c18-a3a6-8f34a69af8bf","name":"Simple Memory3"},{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatDeepSeek","typeVersion":1,"position":[3744,1984],"id":"7fc59fdb-c76e-4b94-ba76-0bec5c9b2ff0","name":"DeepSeek Chat Model6"},{"parameters":{"sessionIdType":"customKey","sessionKey":"={{ $('datosImportantes').first().json.sesionID }}"},"type":"@n8n/n8n-nodes-langchain.memoryBufferWindow","typeVersion":1.3,"position":[3904,1984],"id":"179863c5-a9b7-45b3-aa98-2be9d624af75","name":"Simple Memory4"},{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatDeepSeek","typeVersion":1,"position":[4128,1824],"id":"11967b70-a67d-4243-954a-0cb8778598b0","name":"DeepSeek Chat Model7"},{"parameters":{"sessionIdType":"customKey","sessionKey":"={{ $('datosImportantes').first().json.sesionID }}"},"type":"@n8n/n8n-nodes-langchain.memoryBufferWindow","typeVersion":1.3,"position":[4272,1824],"id":"67ed2d00-0f7d-4374-9b99-509e289589b3","name":"Simple Memory6"},{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatDeepSeek","typeVersion":1,"position":[4544,1776],"id":"b9ef373d-d30b-47f9-bb2c-ad5b8e5e12d5","name":"DeepSeek Chat Model8"},{"parameters":{"sessionIdType":"customKey","sessionKey":"={{ $('datosImportantes').first().json.sesionID }}"},"type":"@n8n/n8n-nodes-langchain.memoryBufferWindow","typeVersion":1.3,"position":[4672,1760],"id":"7d74b6d1-cadc-43c6-a5a2-36c75482aee6","name":"Simple Memory7"},{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatDeepSeek","typeVersion":1,"position":[4928,1984],"id":"79282fe5-532d-437a-a0c8-74a455abebf4","name":"DeepSeek Chat Model9"},{"parameters":{"sessionIdType":"customKey","sessionKey":"={{ $('datosImportantes').first().json.sesionID }}"},"type":"@n8n/n8n-nodes-langchain.memoryBufferWindow","typeVersion":1.3,"position":[5040,1904],"id":"2dc3f221-7e64-47fa-b9af-f5b5d0693ae4","name":"Simple Memory8"},{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatDeepSeek","typeVersion":1,"position":[5312,2000],"id":"cd5316a5-063d-4349-8d2b-007de186de7e","name":"DeepSeek Chat Model10"},{"parameters":{"sessionIdType":"customKey","sessionKey":"={{ $('datosImportantes').first().json.sesionID }}"},"type":"@n8n/n8n-nodes-langchain.memoryBufferWindow","typeVersion":1.3,"position":[5440,1984],"id":"c119ef17-29ae-44a6-9814-c5fb5a8d5452","name":"Simple Memory9"},{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatDeepSeek","typeVersion":1,"position":[5632,2240],"id":"cb9ead3d-593e-4130-8672-4faa7b6f1c82","name":"DeepSeek Chat Model11"},{"parameters":{"sessionIdType":"customKey","sessionKey":"={{ $('datosImportantes').first().json.sesionID }}"},"type":"@n8n/n8n-nodes-langchain.memoryBufferWindow","typeVersion":1.3,"position":[5760,2128],"id":"03452eef-c5ba-449d-909e-c5f5518669b6","name":"Simple Memory10"},{"parameters":{"authentication":"nocoDbApiToken","operation":"getAll","projectId":"p4ux4pbadqc3jkp","table":"mzggc18rppgfrap","returnAll":true,"options":{"fields":["Nombre","Precio"]}},"type":"n8n-nodes-base.nocoDb","typeVersion":3,"position":[6224,640],"id":"75cd1a4b-d516-47ce-9bd9-944878970dd4","name":"infoExtras"},{"parameters":{"authentication":"nocoDbApiToken","operation":"getAll","projectId":"p4ux4pbadqc3jkp","table":"m2mz9uck1ctm5vd","returnAll":true,"options":{"fields":["Nombre","Precio"]}},"type":"n8n-nodes-base.nocoDb","typeVersion":3,"position":[6224,800],"id":"9744b4a1-68b2-46e9-af00-a4ec513a32df","name":"infoBebidas"},{"parameters":{"authentication":"nocoDbApiToken","operation":"getAll","projectId":"p4ux4pbadqc3jkp","table":"m1rcl018pi9goj3","returnAll":true,"options":{"fields":["Nombre","Precio"]}},"type":"n8n-nodes-base.nocoDb","typeVersion":3,"position":[6224,1232],"id":"3605cdc3-baff-402f-b6f5-a35dea8ae54f","name":"infoCombos"},{"parameters":{"authentication":"nocoDbApiToken","operation":"getAll","projectId":"p4ux4pbadqc3jkp","table":"mhn3nnvkna928di","returnAll":true,"options":{"fields":["Nombre","Precio"]}},"type":"n8n-nodes-base.nocoDb","typeVersion":3,"position":[6224,1040],"id":"305b15f8-63c3-49af-bbf8-f357fc1814ae","name":"infoBanio"},{"parameters":{"mode":"delete","deleteMode":"all"},"type":"@n8n/n8n-nodes-langchain.memoryManager","typeVersion":1.1,"position":[-1680,1472],"id":"2e595d8f-e42b-4d85-81b4-f7771a1ee1a2","name":"Chat Memory Manager"},{"parameters":{"toolDescription":"√ösala para para preguntar al cliente su nombre cuando el campo 'Nombre' est√© vac√≠o.","text":"={{ $('datosImportantes').first().json.message }}    ","options":{"systemMessage":"=Tu √∫nica misi√≥n es  preguntar al cliente su nombre. No hagas ninguna otra acci√≥n.\n\n=# PROCESO\n1.  Decirle al cliente que brinde su nombre completo para continuar con el pedido\n2.  Formula una respuesta para el cliente que sea conversacional e incluya las opciones con emojis relevantes\n\n=# EJEMPLO DE RESPUESTA PERFECTA\n\"Por favor, ¬øpodr√≠as proporcionarme tu nombre completo para continuar con¬†tu¬†pedido?\"\n"}},"type":"@n8n/n8n-nodes-langchain.agentTool","typeVersion":2.2,"position":[2256,1936],"id":"f10e59b3-0133-4b09-9809-bb0dbdcbaac7","name":"tomaNombre"},{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatDeepSeek","typeVersion":1,"position":[2128,2144],"id":"3c34d777-8d96-46e8-926a-cf4fe73eb97b","name":"DeepSeek Chat Model12"},{"parameters":{"toolDescription":"√ösala para para preguntar al cliente si desea agregar un comentario cuando el campo 'Comentario' est√© vac√≠o.","text":"={{ $('datosImportantes').first().json.message }}    ","options":{"systemMessage":"=Tu √∫nica misi√≥n es ejecutar preguntar al si desea agregar un comentario o no.\nNo hagas ninguna otra acci√≥n.\n\n=# PROCESO\n1.  Decirle al cliente si desea agregar un comentario o no\n2.  Formula una respuesta para el cliente que sea conversacional e incluya las opciones con emojis relevantes\n\n=# EJEMPLO DE RESPUESTA PERFECTA\n\"¬øHay alg√∫n comentario adicional que te gustar√≠a agregar a tu pedido? (por ejemplo: instrucciones especiales, preferencias de preparaci√≥n,¬†etc.) \"\n"}},"type":"@n8n/n8n-nodes-langchain.agentTool","typeVersion":2.2,"position":[2128,1712],"id":"ef912bec-8e4c-4073-9691-7448a3c3a6be","name":"tomaComentarios"},{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatDeepSeek","typeVersion":1,"position":[2064,1920],"id":"ee396e2c-337d-42c3-aee9-507879d291f0","name":"DeepSeek Chat Model13"},{"parameters":{"toolDescription":"√ösala para para indicarle al cliente que ingrese su ubicaci√≥n en tiempo real cuando el campo 'esUbicacionTiempoReal' sea false.","text":"={{ $('datosImportantes').first().json.message }}    ","options":{"systemMessage":"=Tu √∫nica misi√≥n es decirle al cliente que comparta su ubicaci√≥n en tiempo real para poder calcular el delivery. No hagas ninguna otra acci√≥n.\n\n=# PROCESO\n1.  Decirle al cliente que comparta su ubicacion para poder calcular el delivery\n2.  Formula una respuesta para el cliente que sea conversacional e incluya las opciones con emojis relevantes\n\n=# EJEMPLO DE RESPUESTA PERFECTA\n\"Para calcular el costo del env√≠o, por favor, comp√°rtenos tu¬†ubicaci√≥n¬†üìç\"\n"}},"type":"@n8n/n8n-nodes-langchain.agentTool","typeVersion":2.2,"position":[1904,1616],"id":"d4118937-4284-4931-99e1-a44237300844","name":"tomaUbicacion"},{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatDeepSeek","typeVersion":1,"position":[1696,1808],"id":"f92c4f09-1bac-4f2c-9625-86be9b8666d2","name":"DeepSeek Chat Model14"},{"parameters":{"sessionIdType":"customKey","sessionKey":"={{ $('datosImportantes').first().json.sesionID }}"},"type":"@n8n/n8n-nodes-langchain.memoryBufferWindow","typeVersion":1.3,"position":[6336,2208],"id":"f21521d5-2c4a-4e24-98b9-64ae185b231d","name":"Simple Memory5"},{"parameters":{"numberInputs":5},"type":"n8n-nodes-base.merge","typeVersion":3.2,"position":[6592,880],"id":"28c3c0f6-5534-4d96-ae7b-19a0a1dc77c4","name":"Merge"},{"parameters":{"method":"POST","url":"=https://n8n-chatwoot.kwu5pq.easypanel.host/api/v1/accounts/{{ $('datos').first().json.accountID }}/conversations/{{ $('datos').first().json.idConversacion }}/messages","authentication":"genericCredentialType","genericAuthType":"httpHeaderAuth","sendBody":true,"bodyParameters":{"parameters":[{"name":"content","value":"={{ $('Calcular_Total_y_Resumen').item.json.mensajeDeConfirmacion }}"},{"name":"private","value":"false"}]},"options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[7504,928],"id":"ece84582-efc8-4040-a020-7b994944fb06","name":"HTTP Request2","retryOnFail":true},{"parameters":{"authentication":"nocoDbApiToken","operation":"update","projectId":"p4ux4pbadqc3jkp","table":"m6fpdkibwdxg9cc","fieldsUi":{"fieldValues":[{"fieldName":"Id","fieldValue":"={{ $json.idPedido }}"},{"fieldName":"salsas","fieldValue":"Salsa de Tomate"},{"fieldName":"alitasBa√±adas","fieldValue":"no"}]}},"type":"n8n-nodes-base.nocoDb","typeVersion":3,"position":[256,768],"id":"27e584a3-700c-4fb1-85eb-eae2ee98b48e","name":"actualizarCampos"},{"parameters":{"sessionIdType":"customKey","sessionKey":"={{ $('datosImportantes').first().json.sesionID }}"},"type":"@n8n/n8n-nodes-langchain.memoryBufferWindow","typeVersion":1.3,"position":[1888,1856],"id":"67b599b5-4a85-4b50-8325-b123ba92bdb7","name":"Simple Memory11"},{"parameters":{"sessionIdType":"customKey","sessionKey":"={{ $('datosImportantes').first().json.sesionID }}"},"type":"@n8n/n8n-nodes-langchain.memoryBufferWindow","typeVersion":1.3,"position":[2272,2144],"id":"6f4397a7-c524-48e4-bc41-356d42761d88","name":"Simple Memory12"},{"parameters":{"toolDescription":"Usa esta herramienta cuando los datos del estado actual del pedido est√©n completos y necesitas finalizar el pedido","text":"={{ $('datosImportantes').first().json.message }}    ","options":{"systemMessage":"=Tu √∫nica misi√≥n es devolver exactamente la siguiente frase: `Generar_Resumen_y_Total`\nNo hagas ninguna otra acci√≥n.\n\n=# PROCESO\n1. Devolver exactamente la siguiente frase: `Generar_Resumen_y_Total`\n\n\n=# EJEMPLO DE RESPUESTA PERFECTA\n`Generar_Resumen_y_Total`"}},"type":"@n8n/n8n-nodes-langchain.agentTool","typeVersion":2.2,"position":[2640,1664],"id":"a2b9bbe6-30d7-448f-843b-cc2db6366fe3","name":"tomaFinalizar"},{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatDeepSeek","typeVersion":1,"position":[2560,1840],"id":"55a401d2-e012-47c2-b196-b57a85cd5286","name":"DeepSeek Chat Model15"},{"parameters":{"sessionIdType":"customKey","sessionKey":"={{ $('datosImportantes').first().json.sesionID }}"},"type":"@n8n/n8n-nodes-langchain.memoryBufferWindow","typeVersion":1.3,"position":[2672,1872],"id":"a04863dc-1ca6-4d80-bdd7-be6d23c125c2","name":"Simple Memory13"},{"parameters":{"jsCode":"// Funci√≥n auxiliar para formatear campos que pueden ser texto o lista\nfunction formatarLista(item) {\n  if (!item || item.length === 0) {\n    return null;\n  }\n  if (Array.isArray(item)) {\n    return item.join(', ');\n  }\n  return item;\n}\n\nconst pedido = $input.first().json;\nlet resumen = \"Estado actual del pedido:\\n\";\n\nconst salsasFormateadas = formatarLista(pedido.salsas);\nconst extrasFormateados = formatarLista(pedido.extras);\nconst bebidasFormateadas = formatarLista(pedido.bebidas);\n\n// L√≥gica para Alitas Ba√±adas: devuelve 'S√≠', 'No' o un texto vac√≠o ''\nlet textoAlitasBa√±adas = ''; \nif (pedido.alitasBa√±adas === 'si') {\n  textoAlitasBa√±adas = 'si';\n} else if (pedido.alitasBa√±adas === 'no' || pedido.alitasBa√±adas === 'no seleccionado') {\n  textoAlitasBa√±adas = 'no';\n}\n\n// Construimos el resumen. Si un campo es nulo, se mostrar√° vac√≠o.\nresumen += `- Combo: ${pedido.combo || ''}\\n`;\nresumen += `- Tipo de alitas: ${pedido.tipo || ''}\\n`;\nresumen += `- Alitas Ba√±adas: ${textoAlitasBa√±adas}\\n`;\nresumen += `- Salsas: ${salsasFormateadas || ''}\\n`;\nresumen += `- Extras: ${extrasFormateados || ''}\\n`;\nresumen += `- Bebidas: ${bebidasFormateadas || ''}\\n`;\nresumen += `- Entrega: ${pedido.entrega || ''}\\n`;\nresumen += `- esUbicacionTiempoReal: ${pedido.esUbicacionTiempoReal }\\n`;\nresumen += `- Nombre: ${pedido.nombre || ''}\\n`;\nresumen += `- Forma de pago: ${pedido.formaPago || ''}\\n`;\nresumen += `- Sucursal despacho: ${pedido.sucursalDespacho || ''}\\n`;\nresumen += `- Comentarios: ${pedido.comentarios || ''}\\n`;\n\n\nreturn [{ json: { resumenEstado: resumen } }];"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[3248,1152],"id":"d9cb0b52-c9b9-45fb-89b9-7d97a63b60ac","name":"Crear Resumen de Estado","alwaysOutputData":true},{"parameters":{"jsCode":"const order = items[0].json.datosPedidoResumen || items[0].json;\nconst SENTINELS = ['','null','undefined','no aplica','ninguno','n/a','-','sin definir'];\n\nfunction isEmpty(v){\n  if (v===null || v===undefined) return true;\n  if (Array.isArray(v)) return v.length===0;\n  if (typeof v === 'string') {\n    const s=v.trim().toLowerCase(); return SENTINELS.includes(s) || s==='';\n  }\n  if (typeof v === 'object') return Object.keys(v).length===0;\n  return false;\n}\nfunction hasValidLocation(o){\n  if(!o) return false;\n  const lat = o.latitude ?? o.lat; const lon = o.longitude ?? o.lon;\n  return typeof lat === 'number' && !Number.isNaN(lat) && typeof lon === 'number' && !Number.isNaN(lon);\n}\n\nconst priority = [\n  { field: 'combo', tool: 'tomaCombos' },\n  { field: 'tipoAlitas', tool: 'tomaAlas' },\n  { field: 'salsas', tool: 'tomaSalsas' },\n  { field: 'alitasBanadas', tool: 'tomaBanadas' },\n  { field: 'extras', tool: 'tomaExtras' },\n  { field: 'bebidas', tool: 'tomaBebidas' },\n  { field: 'entrega', tool: 'tomaEntrega' },\n  { field: 'sucursalDespacho', tool: 'tomaSucursales' },\n  { field: 'nombre', tool: 'tomaNombre' },\n  { field: 'formaPago', tool: 'tomaPago' },\n  { field: 'comentarios', tool: 'tomaComentarios' }\n];\n\nfunction firstMissing(order){\n  const entregaVal = (order.entrega||'').toString().trim().toLowerCase();\n  if (entregaVal === 'delivery' || entregaVal === 'domicilio') {\n    if (!hasValidLocation(order.ubicacion) && !hasValidLocation(order)) {\n      return { tool: 'pideUbicacion', field: 'ubicacion', reason: 'missing_location' };\n    }\n  }\n  for (const p of priority) {\n    if (isEmpty(order[p.field])) return { tool: p.tool, field: p.field, reason: 'empty' };\n  }\n  return null;\n}\n\nconst result = firstMissing(order);\nlet out;\nif (!result) {\n  // check required to finalize\n  const required = ['combo','tipoAlitas','entrega','nombre','formaPago'];\n  const complete = required.every(r => !isEmpty(order[r])) && !( (order.entrega||'').toLowerCase()==='delivery' && !hasValidLocation(order.ubicacion));\n  out = complete ? { tool: 'tomaFinalizar' } : { tool: 'actualizaciones' };\n} else out = result;\n\nreturn [{ json: out }];\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[3456,1152],"id":"7b90ac20-9f1c-407e-bb6d-a7bf4d1e663f","name":"herramienta"}],"connections":{"Webhook":{"main":[[{"node":"If4","type":"main","index":0}]]},"If4":{"main":[[{"node":"datosImportantes","type":"main","index":0}],[{"node":"No Operation, do nothing1","type":"main","index":0}]]},"Pedido Anterior":{"main":[[{"node":"Cliente o Nuevo","type":"main","index":0}]]},"Formula Filtro - Pedido Anterior":{"main":[[{"node":"Pedido Anterior","type":"main","index":0}]]},"Cliente o Nuevo":{"main":[[{"node":"Verificar si ya existe un pedido \"activo\" (pendiente_cliente","type":"main","index":0}]]},"Verificar si ya existe un pedido \"activo\" (pendiente_cliente":{"main":[[{"node":"Pedido pendiente_cliente","type":"main","index":0}]]},"Pedido pendiente_cliente":{"main":[[{"node":"pedido existente y pedido entregado","type":"main","index":0}]]},"pedido existente y pedido entregado":{"main":[[{"node":"Router Principal","type":"main","index":0}]]},"Switch":{"main":[[{"node":"If1","type":"main","index":0}],[{"node":"pedido proceso","type":"main","index":0}],[],[{"node":"actualizarCampos","type":"main","index":0}],[{"node":"Verifica si es una ubicaci√≥n v√°lida","type":"main","index":0}]]},"Update a row":{"main":[[{"node":"HTTP Request3","type":"main","index":0}]]},"Merge1":{"main":[[{"node":"If","type":"main","index":0}]]},"insertarNumero":{"main":[[{"node":"pedidoActivo","type":"main","index":0}]]},"If8":{"main":[[{"node":"pedido","type":"main","index":0}],[{"node":"HTTP Request1","type":"main","index":0}]]},"coordinador":{"main":[[{"node":"datos","type":"main","index":0}]]},"actualizaciones":{"ai_tool":[[{"node":"coordinador","type":"ai_tool","index":0}]]},"salsas":{"ai_tool":[[{"node":"tomaSalsas","type":"ai_tool","index":0}]]},"combos":{"ai_tool":[[{"node":"tomaCombos","type":"ai_tool","index":0}]]},"bebidas":{"ai_tool":[[{"node":"tomaBebidas","type":"ai_tool","index":0}]]},"extras":{"ai_tool":[[{"node":"tomaExtras","type":"ai_tool","index":0}]]},"actualizar":{"ai_tool":[[{"node":"actualizaciones","type":"ai_tool","index":0}]]},"If val Ubicacion":{"main":[[{"node":"Encontrar sucursal m√°s cercana","type":"main","index":0}],[{"node":"pedidoActivo","type":"main","index":0}]]},"Encontrar sucursal m√°s cercana":{"main":[[{"node":"Distance Matrix","type":"main","index":0}]]},"Distance Matrix":{"main":[[{"node":"Costo del Envio","type":"main","index":0}]]},"Costo del Envio":{"main":[[{"node":"actualizarEnvio","type":"main","index":0}]]},"actualizarEnvio":{"main":[[{"node":"pedidoActivo","type":"main","index":0}]]},"pedido":{"main":[[{"node":"pendiente","type":"main","index":0}]]},"compra":{"main":[[{"node":"infoExtras","type":"main","index":0},{"node":"infoBebidas","type":"main","index":0},{"node":"infoBanio","type":"main","index":0},{"node":"infoCombos","type":"main","index":0},{"node":"Merge","type":"main","index":2}]]},"Calcular_Total_y_Resumen":{"main":[[{"node":"total","type":"main","index":0}]]},"datosImportantes":{"main":[[{"node":"Formula Filtro - Pedido Anterior","type":"main","index":0}]]},"pedidoActivo":{"main":[[{"node":"Pedido pendiente1","type":"main","index":0}]]},"pendiente":{"main":[[{"node":"compra","type":"main","index":0}]]},"Verifica si es una ubicaci√≥n v√°lida":{"main":[[{"node":"If val Ubicacion","type":"main","index":0}]]},"Router Principal":{"main":[[{"node":"Information Extractor","type":"main","index":0}],[{"node":"Merge1","type":"main","index":0}],[{"node":"Merge1","type":"main","index":1}]]},"If":{"main":[[{"node":"insertarInfo","type":"main","index":0}],[{"node":"insertarNumero","type":"main","index":0}]]},"insertarInfo":{"main":[[{"node":"pedidoActivo","type":"main","index":0}]]},"DeepSeek Chat Model":{"ai_languageModel":[[{"node":"coordinador","type":"ai_languageModel","index":0}]]},"DeepSeek Chat Model2":{"ai_languageModel":[[{"node":"actualizaciones","type":"ai_languageModel","index":0}]]},"datos":{"main":[[{"node":"If8","type":"main","index":0}]]},"Information Extractor":{"main":[[{"node":"data","type":"main","index":0}]]},"DeepSeek Chat Model3":{"ai_languageModel":[[{"node":"Information Extractor","type":"ai_languageModel","index":0}]]},"data":{"main":[[{"node":"Switch","type":"main","index":0}]]},"Simple Memory":{"ai_memory":[[{"node":"coordinador","type":"ai_memory","index":0}]]},"alas":{"ai_tool":[[{"node":"tomaAlas","type":"ai_tool","index":0}]]},"sucursales":{"ai_tool":[[{"node":"tomaSucursales","type":"ai_tool","index":0}]]},"pago":{"ai_tool":[[{"node":"tomaPago","type":"ai_tool","index":0}]]},"entrega":{"ai_tool":[[{"node":"tomaEntrega","type":"ai_tool","index":0}]]},"banadas":{"ai_tool":[[{"node":"tomaBanadas","type":"ai_tool","index":0}]]},"If1":{"main":[[{"node":"HTTP Request","type":"main","index":0}],[{"node":"Update a row","type":"main","index":0}]]},"Pedido pendiente1":{"main":[[{"node":"Crear Resumen de Estado","type":"main","index":0}]]},"pedido proceso":{"main":[[{"node":"Pedido","type":"main","index":0}]]},"Pedido":{"main":[[{"node":"analizarPedido","type":"main","index":0}]]},"analizarPedido":{"main":[[{"node":"If2","type":"main","index":0}]]},"If2":{"main":[[{"node":"Update estado pedido","type":"main","index":0}],[{"node":"HTTP Request5","type":"main","index":0}]]},"Update estado pedido":{"main":[[{"node":"HTTP Request4","type":"main","index":0}]]},"total":{"main":[[{"node":"HTTP Request2","type":"main","index":0}]]},"tomaExtras":{"ai_tool":[[{"node":"coordinador","type":"ai_tool","index":0}]]},"tomaBebidas":{"ai_tool":[[{"node":"coordinador","type":"ai_tool","index":0}]]},"tomaAlas":{"ai_tool":[[{"node":"coordinador","type":"ai_tool","index":0}]]},"tomaCombos":{"ai_tool":[[{"node":"coordinador","type":"ai_tool","index":0}]]},"tomaSalsas":{"ai_tool":[[{"node":"coordinador","type":"ai_tool","index":0}]]},"tomaSucursales":{"ai_tool":[[{"node":"coordinador","type":"ai_tool","index":0}]]},"tomaPago":{"ai_tool":[[{"node":"coordinador","type":"ai_tool","index":0}]]},"tomaEntrega":{"ai_tool":[[{"node":"coordinador","type":"ai_tool","index":0}]]},"tomaBanadas":{"ai_tool":[[{"node":"coordinador","type":"ai_tool","index":0}]]},"DeepSeek Chat Model1":{"ai_languageModel":[[{"node":"tomaCombos","type":"ai_languageModel","index":0}]]},"Simple Memory1":{"ai_memory":[[{"node":"tomaCombos","type":"ai_memory","index":0}]]},"DeepSeek Chat Model4":{"ai_languageModel":[[{"node":"tomaSalsas","type":"ai_languageModel","index":0}]]},"Simple Memory2":{"ai_memory":[[{"node":"tomaSalsas","type":"ai_memory","index":0}]]},"DeepSeek Chat Model5":{"ai_languageModel":[[{"node":"tomaExtras","type":"ai_languageModel","index":0}]]},"Simple Memory3":{"ai_memory":[[{"node":"tomaExtras","type":"ai_memory","index":0}]]},"DeepSeek Chat Model6":{"ai_languageModel":[[{"node":"tomaBebidas","type":"ai_languageModel","index":0}]]},"Simple Memory4":{"ai_memory":[[{"node":"tomaBebidas","type":"ai_memory","index":0}]]},"DeepSeek Chat Model7":{"ai_languageModel":[[{"node":"tomaAlas","type":"ai_languageModel","index":0}]]},"Simple Memory6":{"ai_memory":[[{"node":"tomaAlas","type":"ai_memory","index":0}]]},"DeepSeek Chat Model8":{"ai_languageModel":[[{"node":"tomaSucursales","type":"ai_languageModel","index":0}]]},"Simple Memory7":{"ai_memory":[[{"node":"tomaSucursales","type":"ai_memory","index":0}]]},"DeepSeek Chat Model9":{"ai_languageModel":[[{"node":"tomaPago","type":"ai_languageModel","index":0}]]},"Simple Memory8":{"ai_memory":[[{"node":"tomaPago","type":"ai_memory","index":0}]]},"DeepSeek Chat Model10":{"ai_languageModel":[[{"node":"tomaEntrega","type":"ai_languageModel","index":0}]]},"Simple Memory9":{"ai_memory":[[{"node":"tomaEntrega","type":"ai_memory","index":0}]]},"DeepSeek Chat Model11":{"ai_languageModel":[[{"node":"tomaBanadas","type":"ai_languageModel","index":0}]]},"Simple Memory10":{"ai_memory":[[{"node":"tomaBanadas","type":"ai_memory","index":0}]]},"infoExtras":{"main":[[{"node":"Merge","type":"main","index":0}]]},"infoBebidas":{"main":[[{"node":"Merge","type":"main","index":1}]]},"infoBanio":{"main":[[{"node":"Merge","type":"main","index":3}]]},"infoCombos":{"main":[[{"node":"Merge","type":"main","index":4}]]},"tomaNombre":{"ai_tool":[[{"node":"coordinador","type":"ai_tool","index":0}]]},"DeepSeek Chat Model12":{"ai_languageModel":[[{"node":"tomaNombre","type":"ai_languageModel","index":0}]]},"tomaComentarios":{"ai_tool":[[{"node":"coordinador","type":"ai_tool","index":0}]]},"DeepSeek Chat Model13":{"ai_languageModel":[[{"node":"tomaComentarios","type":"ai_languageModel","index":0}]]},"tomaUbicacion":{"ai_tool":[[{"node":"coordinador","type":"ai_tool","index":0}]]},"DeepSeek Chat Model14":{"ai_languageModel":[[{"node":"tomaUbicacion","type":"ai_languageModel","index":0}]]},"Simple Memory5":{"ai_memory":[[{"node":"actualizaciones","type":"ai_memory","index":0}]]},"Merge":{"main":[[{"node":"Calcular_Total_y_Resumen","type":"main","index":0}]]},"actualizarCampos":{"main":[[{"node":"Verifica si es una ubicaci√≥n v√°lida","type":"main","index":0}]]},"Simple Memory11":{"ai_memory":[[{"node":"tomaUbicacion","type":"ai_memory","index":0}]]},"Simple Memory12":{"ai_memory":[[{"node":"tomaNombre","type":"ai_memory","index":0}]]},"tomaFinalizar":{"ai_tool":[[{"node":"coordinador","type":"ai_tool","index":0}]]},"DeepSeek Chat Model15":{"ai_languageModel":[[{"node":"tomaFinalizar","type":"ai_languageModel","index":0}]]},"Simple Memory13":{"ai_memory":[[{"node":"tomaFinalizar","type":"ai_memory","index":0}]]},"Crear Resumen de Estado":{"main":[[{"node":"herramienta","type":"main","index":0}]]},"herramienta":{"main":[[{"node":"coordinador","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":null,"pinData":{},"versionId":"45768a8f-58a1-498b-aa12-3bf7145ded5d","triggerCount":0,"shared":[{"createdAt":"2025-09-08T14:13:37.540Z","updatedAt":"2025-09-08T14:13:37.540Z","role":"workflow:owner","workflowId":"4TUVkGsXLrwzUxGk","projectId":"Z5in8UBg6O8Rkhdj"}],"tags":[]}